Input output examples:
    i 11 j 16 sizei 8 sizej 8    _out -1
    i 11 j 16 sizei 8 sizej 16    _out -1
    i 11 j 16 sizei 8 sizej 32    _out -1
    i 11 j 16 sizei 16 sizej 8    _out -1
    i 11 j 16 sizei 16 sizej 16    _out 39
    i 11 j 16 sizei 16 sizej 32    _out 127
    i 11 j 16 sizei 32 sizej 8    _out -1
    i 11 j 16 sizei 32 sizej 16    _out 39
    i 11 j 16 sizei 32 sizej 32    _out 127
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x7e84a0
i 11 j 16 sizei 8 sizej 8 _out -1
i 11 j 16 sizei 8 sizej 16 _out -1
i 11 j 16 sizei 8 sizej 32 _out -1
i 11 j 16 sizei 16 sizej 8 _out -1
i 11 j 16 sizei 16 sizej 16 _out 39
i 11 j 16 sizei 16 sizej 32 _out 127
i 11 j 16 sizei 32 sizej 8 _out -1
i 11 j 16 sizei 32 sizej 16 _out 39
i 11 j 16 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 30, check correct
Current pList size 30, grow
Current pList size 696, eliminate equvalents
Current pList size 163, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Start search condition, Complete, program found ((i < sizei) && (i < sizej))
succeed

Start search node 0x7e7eb0
i 11 j 16 sizei 8 sizej 8 _out -1
i 11 j 16 sizei 8 sizej 16 _out -1
i 11 j 16 sizei 8 sizej 32 _out -1
i 11 j 16 sizei 16 sizej 8 _out -1
i 11 j 16 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x7e8270
i 11 j 16 sizei 16 sizej 16 _out 39
i 11 j 16 sizei 16 sizej 32 _out 127
i 11 j 16 sizei 32 sizej 16 _out 39
i 11 j 16 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 26, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x7e3330
i 11 j 16 sizei 16 sizej 16 _out 39
i 11 j 16 sizei 32 sizej 16 _out 39
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
Current pList size 113, grow
Current pList size 12995, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 17, check correct
Current pList size 17, grow
Current pList size 325, eliminate equvalents
Current pList size 72, check correct
Current pList size 72, grow
Current pList size 7053, eliminate equvalents
Current pList size 395, check correct
SynProg: ((i + i) + ((i + 2) + (2 + 2)))
SynProg: ((i + i) + ((i + 2) + (2 + 2)))
Start search condition, Complete, program found ((i + i) + ((i + 2) + (2 + 2)))
succeed

Start search node 0x7e80e0
i 11 j 16 sizei 16 sizej 16 _out 39
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 84, check correct
Current pList size 84, grow
Current pList size 7224, eliminate equvalents
Current pList size 1275, check correct
SynProg: (i + (j + 12))
SynProg: (i + (j + 12))
Complete, program found (i + (j + 12))

Start search node 0x7e34c0
i 11 j 16 sizei 32 sizej 16 _out 39
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
SynProg: (sizei + 7)
SynProg: (sizei + 7)
Complete, program found (sizei + 7)

Start search node 0x7e78c0
i 11 j 16 sizei 16 sizej 32 _out 127
i 11 j 16 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 130, check correct
Current pList size 130, grow
Current pList size 17160, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
Current pList size 23, grow
Current pList size 585, eliminate equvalents
Current pList size 106, check correct
Current pList size 106, grow
Current pList size 15774, eliminate equvalents
Current pList size 646, check correct
SynProg: ((i + (j + sizej)) + ((sizej + sizej) + (2 + 2)))
SynProg: ((i + (j + sizej)) + ((sizej + sizej) + (2 + 2)))
Start search condition, Complete, program found ((i + (j + sizej)) + ((sizej + sizej) + (2 + 2)))
succeed

Start search node 0x7e3880
i 11 j 16 sizei 16 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
Current pList size 99, grow
Current pList size 9999, eliminate equvalents
Current pList size 2045, check correct
SynProg: (6 + (i * i))
SynProg: (6 + (i * i))
Complete, program found (6 + (i * i))

Start search node 0x7e3c40
i 11 j 16 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
Current pList size 99, grow
Current pList size 9999, eliminate equvalents
Current pList size 2045, check correct
SynProg: (6 + (i * i))
SynProg: (6 + (i * i))
Complete, program found (6 + (i * i))
--------------------------------------, dump tree after search
i 11 j 16 sizei 8 sizej 8 _out 1
i 11 j 16 sizei 8 sizej 16 _out 1
i 11 j 16 sizei 8 sizej 32 _out 1
i 11 j 16 sizei 16 sizej 8 _out 1
i 11 j 16 sizei 16 sizej 16 _out 0
i 11 j 16 sizei 16 sizej 32 _out 0
i 11 j 16 sizei 32 sizej 8 _out 1
i 11 j 16 sizei 32 sizej 16 _out 0
i 11 j 16 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (i < sizej)) then -1 else (if (j < sizej) then (if ((i + i) + ((i + 2) + (2 + 2))) then (i + (j + 12)) else (sizei + 7)) else (if ((i + (j + sizej)) + ((sizej + sizej) + (2 + 2))) then (6 + (i * i)) else (6 + (i * i)))))
L---i 11 j 16 sizei 8 sizej 8 _out -1
L---i 11 j 16 sizei 8 sizej 16 _out -1
L---i 11 j 16 sizei 8 sizej 32 _out -1
L---i 11 j 16 sizei 16 sizej 8 _out -1
L---i 11 j 16 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 11 j 16 sizei 16 sizej 16 _out 1
R---i 11 j 16 sizei 16 sizej 32 _out 0
R---i 11 j 16 sizei 32 sizej 16 _out 1
R---i 11 j 16 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then (if ((i + i) + ((i + 2) + (2 + 2))) then (i + (j + 12)) else (sizei + 7)) else (if ((i + (j + sizej)) + ((sizej + sizej) + (2 + 2))) then (6 + (i * i)) else (6 + (i * i))))
R---L---i 11 j 16 sizei 16 sizej 16 _out 39
R---L---i 11 j 16 sizei 32 sizej 16 _out 39
Searched Program: (if ((i + i) + ((i + 2) + (2 + 2))) then (i + (j + 12)) else (sizei + 7))
R---L---L---i 11 j 16 sizei 16 sizej 16 _out 39
Searched Program: (i + (j + 12))
R---L---R---i 11 j 16 sizei 32 sizej 16 _out 39
Searched Program: (sizei + 7)
R---R---i 11 j 16 sizei 16 sizej 32 _out 127
R---R---i 11 j 16 sizei 32 sizej 32 _out 127
Searched Program: (if ((i + (j + sizej)) + ((sizej + sizej) + (2 + 2))) then (6 + (i * i)) else (6 + (i * i)))
R---R---L---i 11 j 16 sizei 16 sizej 32 _out 127
Searched Program: (6 + (i * i))
R---R---R---i 11 j 16 sizei 32 sizej 32 _out 127
Searched Program: (6 + (i * i))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (i < sizej)) then -1 else (if (j < sizej) then (if ((i + i) + ((i + 2) + (2 + 2))) then (i + (j + 12)) else (sizei + 7)) else (if ((i + (j + sizej)) + ((sizej + sizej) + (2 + 2))) then (6 + (i * i)) else (6 + (i * i)))))
--------------------------------------
