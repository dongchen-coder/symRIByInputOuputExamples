Input output examples:
    i 9 j 13 sizei 8 sizej 8    _out -1
    i 9 j 13 sizei 8 sizej 16    _out -1
    i 9 j 13 sizei 8 sizej 32    _out -1
    i 9 j 13 sizei 16 sizej 8    _out -1
    i 9 j 13 sizei 16 sizej 16    _out 39
    i 9 j 13 sizei 16 sizej 32    _out 31
    i 9 j 13 sizei 32 sizej 8    _out -1
    i 9 j 13 sizei 32 sizej 16    _out 39
    i 9 j 13 sizei 32 sizej 32    _out 135
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0xcc04a0
i 9 j 13 sizei 8 sizej 8 _out -1
i 9 j 13 sizei 8 sizej 16 _out -1
i 9 j 13 sizei 8 sizej 32 _out -1
i 9 j 13 sizei 16 sizej 8 _out -1
i 9 j 13 sizei 16 sizej 16 _out 39
i 9 j 13 sizei 16 sizej 32 _out 31
i 9 j 13 sizei 32 sizej 8 _out -1
i 9 j 13 sizei 32 sizej 16 _out 39
i 9 j 13 sizei 32 sizej 32 _out 135
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 28, check correct
Current pList size 28, grow
Current pList size 675, eliminate equvalents
Current pList size 152, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Start search condition, Complete, program found ((i < sizei) && (i < sizej))
succeed

Start search node 0xcbfeb0
i 9 j 13 sizei 8 sizej 8 _out -1
i 9 j 13 sizei 8 sizej 16 _out -1
i 9 j 13 sizei 8 sizej 32 _out -1
i 9 j 13 sizei 16 sizej 8 _out -1
i 9 j 13 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0xcc0270
i 9 j 13 sizei 16 sizej 16 _out 39
i 9 j 13 sizei 16 sizej 32 _out 31
i 9 j 13 sizei 32 sizej 16 _out 39
i 9 j 13 sizei 32 sizej 32 _out 135
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 3 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 645, eliminate equvalents
Current pList size 129, check correct
Current pList size 129, grow
Current pList size 21486, eliminate equvalents
Current pList size 1009, check correct
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
Start search condition, Complete, program found ((! (sizei < sizej) ) && ((i + i) < sizej))
succeed

Start search node 0xcbbf60
i 9 j 13 sizei 16 sizej 16 _out 39
i 9 j 13 sizei 16 sizej 32 _out 31
i 9 j 13 sizei 32 sizej 16 _out 39
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
SynProg: (sizei < sizej)
SynProg: (sizei < sizej)
Start search condition, Complete, program found (sizei < sizej)
succeed

Start search node 0xcc0450
i 9 j 13 sizei 16 sizej 32 _out 31
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
SynProg: (sizej + -1)
SynProg: (sizej + -1)
Complete, program found (sizej + -1)

Start search node 0xcc0360
i 9 j 13 sizei 16 sizej 16 _out 39
i 9 j 13 sizei 32 sizej 16 _out 39
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 129, check correct
SynProg: (j * 3)
SynProg: (j * 3)
Complete, program found (j * 3)

Start search node 0xcbbba0
i 9 j 13 sizei 32 sizej 32 _out 135
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 107, check correct
Current pList size 107, grow
Current pList size 11663, eliminate equvalents
Current pList size 2348, check correct
SynProg: (3 + (11 * 12))
SynProg: (3 + (11 * 12))
Complete, program found (3 + (11 * 12))
--------------------------------------, dump tree after search
i 9 j 13 sizei 8 sizej 8 _out 1
i 9 j 13 sizei 8 sizej 16 _out 1
i 9 j 13 sizei 8 sizej 32 _out 1
i 9 j 13 sizei 16 sizej 8 _out 1
i 9 j 13 sizei 16 sizej 16 _out 0
i 9 j 13 sizei 16 sizej 32 _out 0
i 9 j 13 sizei 32 sizej 8 _out 1
i 9 j 13 sizei 32 sizej 16 _out 0
i 9 j 13 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (i < sizej)) then -1 else (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then (if (sizei < sizej) then (sizej + -1) else (j * 3)) else (3 + (11 * 12))))
L---i 9 j 13 sizei 8 sizej 8 _out -1
L---i 9 j 13 sizei 8 sizej 16 _out -1
L---i 9 j 13 sizei 8 sizej 32 _out -1
L---i 9 j 13 sizei 16 sizej 8 _out -1
L---i 9 j 13 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 9 j 13 sizei 16 sizej 16 _out 1
R---i 9 j 13 sizei 16 sizej 32 _out 1
R---i 9 j 13 sizei 32 sizej 16 _out 1
R---i 9 j 13 sizei 32 sizej 32 _out 0
Searched Program: (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then (if (sizei < sizej) then (sizej + -1) else (j * 3)) else (3 + (11 * 12)))
R---L---i 9 j 13 sizei 16 sizej 16 _out 0
R---L---i 9 j 13 sizei 16 sizej 32 _out 1
R---L---i 9 j 13 sizei 32 sizej 16 _out 0
Searched Program: (if (sizei < sizej) then (sizej + -1) else (j * 3))
R---L---L---i 9 j 13 sizei 16 sizej 32 _out 31
Searched Program: (sizej + -1)
R---L---R---i 9 j 13 sizei 16 sizej 16 _out 39
R---L---R---i 9 j 13 sizei 32 sizej 16 _out 39
Searched Program: (j * 3)
R---R---i 9 j 13 sizei 32 sizej 32 _out 135
Searched Program: (3 + (11 * 12))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (i < sizej)) then -1 else (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then (if (sizei < sizej) then (sizej + -1) else (j * 3)) else (3 + (11 * 12))))
--------------------------------------
