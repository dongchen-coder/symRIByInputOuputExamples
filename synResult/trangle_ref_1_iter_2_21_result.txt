Input output examples:
    i 2 j 21 sizei 8 sizej 8    _out -1
    i 2 j 21 sizei 8 sizej 16    _out -1
    i 2 j 21 sizei 8 sizej 32    _out 51
    i 2 j 21 sizei 16 sizej 8    _out -1
    i 2 j 21 sizei 16 sizej 16    _out -1
    i 2 j 21 sizei 16 sizej 32    _out 99
    i 2 j 21 sizei 32 sizej 8    _out -1
    i 2 j 21 sizei 32 sizej 16    _out -1
    i 2 j 21 sizei 32 sizej 32    _out 177
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0xf4b4a0
i 2 j 21 sizei 8 sizej 8 _out -1
i 2 j 21 sizei 8 sizej 16 _out -1
i 2 j 21 sizei 8 sizej 32 _out 51
i 2 j 21 sizei 16 sizej 8 _out -1
i 2 j 21 sizei 16 sizej 16 _out -1
i 2 j 21 sizei 16 sizej 32 _out 99
i 2 j 21 sizei 32 sizej 8 _out -1
i 2 j 21 sizei 32 sizej 16 _out -1
i 2 j 21 sizei 32 sizej 32 _out 177
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 6 right size 3
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 22, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Complete, program found (j < sizej)

Start search node 0xf4adc0
i 2 j 21 sizei 8 sizej 8 _out -1
i 2 j 21 sizei 8 sizej 16 _out -1
i 2 j 21 sizei 16 sizej 8 _out -1
i 2 j 21 sizei 16 sizej 16 _out -1
i 2 j 21 sizei 32 sizej 8 _out -1
i 2 j 21 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0xf4b090
i 2 j 21 sizei 8 sizej 32 _out 51
i 2 j 21 sizei 16 sizej 32 _out 99
i 2 j 21 sizei 32 sizej 32 _out 177
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 139, check correct
Current pList size 139, grow
Current pList size 19599, eliminate equvalents
Current pList size 7019, check correct
Current pList size 7019, grow
Time out for bottem up search
Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
Current pList size 18, grow
Current pList size 330, eliminate equvalents
Current pList size 75, check correct
SynProg: (j < (sizei + sizei))
SynProg: (j < (sizei + sizei))
Complete, program found (j < (sizei + sizei))

Start search node 0xf46790
i 2 j 21 sizei 8 sizej 32 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 108, check correct
Current pList size 108, grow
Current pList size 11880, eliminate equvalents
Current pList size 2548, check correct
SynProg: (i + (7 * 7))
SynProg: (i + (7 * 7))
Complete, program found (i + (7 * 7))

Start search node 0xf48060
i 2 j 21 sizei 16 sizej 32 _out 99
i 2 j 21 sizei 32 sizej 32 _out 177
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 139, check correct
Current pList size 139, grow
Current pList size 19599, eliminate equvalents
Current pList size 7019, check correct
Current pList size 7019, grow
Time out for bottem up search
Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Complete, program found (j < sizei)

Start search node 0xf46b50
i 2 j 21 sizei 16 sizej 32 _out 99
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
SynProg: (9 * 11)
SynProg: (9 * 11)
Complete, program found (9 * 11)

Start search node 0xf46a10
i 2 j 21 sizei 32 sizej 32 _out 177
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 108, check correct
Current pList size 108, grow
Current pList size 11880, eliminate equvalents
Current pList size 2548, check correct
SynProg: (9 + (j * 8))
SynProg: (9 + (j * 8))
Complete, program found (9 + (j * 8))
--------------------------------------, dump tree after search
i 2 j 21 sizei 8 sizej 8 _out 1
i 2 j 21 sizei 8 sizej 16 _out 1
i 2 j 21 sizei 8 sizej 32 _out 0
i 2 j 21 sizei 16 sizej 8 _out 1
i 2 j 21 sizei 16 sizej 16 _out 1
i 2 j 21 sizei 16 sizej 32 _out 0
i 2 j 21 sizei 32 sizej 8 _out 1
i 2 j 21 sizei 32 sizej 16 _out 1
i 2 j 21 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then -1 else (if (j < (sizei + sizei)) then (i + (7 * 7)) else (if (j < sizei) then (9 * 11) else (9 + (j * 8)))))
L---i 2 j 21 sizei 8 sizej 8 _out -1
L---i 2 j 21 sizei 8 sizej 16 _out -1
L---i 2 j 21 sizei 16 sizej 8 _out -1
L---i 2 j 21 sizei 16 sizej 16 _out -1
L---i 2 j 21 sizei 32 sizej 8 _out -1
L---i 2 j 21 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 2 j 21 sizei 8 sizej 32 _out 1
R---i 2 j 21 sizei 16 sizej 32 _out 0
R---i 2 j 21 sizei 32 sizej 32 _out 0
Searched Program: (if (j < (sizei + sizei)) then (i + (7 * 7)) else (if (j < sizei) then (9 * 11) else (9 + (j * 8))))
R---L---i 2 j 21 sizei 8 sizej 32 _out 51
Searched Program: (i + (7 * 7))
R---R---i 2 j 21 sizei 16 sizej 32 _out 1
R---R---i 2 j 21 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizei) then (9 * 11) else (9 + (j * 8)))
R---R---L---i 2 j 21 sizei 16 sizej 32 _out 99
Searched Program: (9 * 11)
R---R---R---i 2 j 21 sizei 32 sizej 32 _out 177
Searched Program: (9 + (j * 8))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (j < sizej) then -1 else (if (j < (sizei + sizei)) then (i + (7 * 7)) else (if (j < sizei) then (9 * 11) else (9 + (j * 8)))))
--------------------------------------
