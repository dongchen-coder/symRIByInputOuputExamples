Input output examples:
    i 17 j 28 sizei 8 sizej 8    _out -1
    i 17 j 28 sizei 8 sizej 16    _out -1
    i 17 j 28 sizei 8 sizej 32    _out -1
    i 17 j 28 sizei 16 sizej 8    _out -1
    i 17 j 28 sizei 16 sizej 16    _out -1
    i 17 j 28 sizei 16 sizej 32    _out -1
    i 17 j 28 sizei 32 sizej 8    _out -1
    i 17 j 28 sizei 32 sizej 16    _out -1
    i 17 j 28 sizei 32 sizej 32    _out 87
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x1fab4a0
i 17 j 28 sizei 8 sizej 8 _out -1
i 17 j 28 sizei 8 sizej 16 _out -1
i 17 j 28 sizei 8 sizej 32 _out -1
i 17 j 28 sizei 16 sizej 8 _out -1
i 17 j 28 sizei 16 sizej 16 _out -1
i 17 j 28 sizei 16 sizej 32 _out -1
i 17 j 28 sizei 32 sizej 8 _out -1
i 17 j 28 sizei 32 sizej 16 _out -1
i 17 j 28 sizei 32 sizej 32 _out 87
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 171, check correct
Current pList size 171, grow
Current pList size 29583, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 8 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 360, eliminate equvalents
Current pList size 107, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Complete, program found ((i < sizei) && (i < sizej))

Start search node 0x1faab40
i 17 j 28 sizei 8 sizej 8 _out -1
i 17 j 28 sizei 8 sizej 16 _out -1
i 17 j 28 sizei 8 sizej 32 _out -1
i 17 j 28 sizei 16 sizej 8 _out -1
i 17 j 28 sizei 16 sizej 16 _out -1
i 17 j 28 sizei 16 sizej 32 _out -1
i 17 j 28 sizei 32 sizej 8 _out -1
i 17 j 28 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1fa6bf0
i 17 j 28 sizei 32 sizej 32 _out 87
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 121, check correct
Current pList size 121, grow
Current pList size 14883, eliminate equvalents
Current pList size 3029, check correct
SynProg: (i + (7 * 10))
SynProg: (i + (7 * 10))
Complete, program found (i + (7 * 10))
--------------------------------------, dump tree after search
i 17 j 28 sizei 8 sizej 8 _out 1
i 17 j 28 sizei 8 sizej 16 _out 1
i 17 j 28 sizei 8 sizej 32 _out 1
i 17 j 28 sizei 16 sizej 8 _out 1
i 17 j 28 sizei 16 sizej 16 _out 1
i 17 j 28 sizei 16 sizej 32 _out 1
i 17 j 28 sizei 32 sizej 8 _out 1
i 17 j 28 sizei 32 sizej 16 _out 1
i 17 j 28 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (i < sizej)) then -1 else (i + (7 * 10)))
L---i 17 j 28 sizei 8 sizej 8 _out -1
L---i 17 j 28 sizei 8 sizej 16 _out -1
L---i 17 j 28 sizei 8 sizej 32 _out -1
L---i 17 j 28 sizei 16 sizej 8 _out -1
L---i 17 j 28 sizei 16 sizej 16 _out -1
L---i 17 j 28 sizei 16 sizej 32 _out -1
L---i 17 j 28 sizei 32 sizej 8 _out -1
L---i 17 j 28 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 17 j 28 sizei 32 sizej 32 _out 87
Searched Program: (i + (7 * 10))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (i < sizej)) then -1 else (i + (7 * 10)))
--------------------------------------
