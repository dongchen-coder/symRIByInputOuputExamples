Input output examples:
    i 15 j 15 sizei 8 sizej 8    _out -1
    i 15 j 15 sizei 8 sizej 16    _out -1
    i 15 j 15 sizei 8 sizej 32    _out -1
    i 15 j 15 sizei 16 sizej 8    _out -1
    i 15 j 15 sizei 16 sizej 16    _out 7
    i 15 j 15 sizei 16 sizej 32    _out 103
    i 15 j 15 sizei 32 sizej 8    _out -1
    i 15 j 15 sizei 32 sizej 16    _out 7
    i 15 j 15 sizei 32 sizej 32    _out 103
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0xb6f4a0
i 15 j 15 sizei 8 sizej 8 _out -1
i 15 j 15 sizei 8 sizej 16 _out -1
i 15 j 15 sizei 8 sizej 32 _out -1
i 15 j 15 sizei 16 sizej 8 _out -1
i 15 j 15 sizei 16 sizej 16 _out 7
i 15 j 15 sizei 16 sizej 32 _out 103
i 15 j 15 sizei 32 sizej 8 _out -1
i 15 j 15 sizei 32 sizej 16 _out 7
i 15 j 15 sizei 32 sizej 32 _out 103
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 360, eliminate equvalents
Current pList size 102, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Start search condition, Complete, program found ((i < sizei) && (i < sizej))
succeed

Start search node 0xb6eeb0
i 15 j 15 sizei 8 sizej 8 _out -1
i 15 j 15 sizei 8 sizej 16 _out -1
i 15 j 15 sizei 8 sizej 32 _out -1
i 15 j 15 sizei 16 sizej 8 _out -1
i 15 j 15 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0xb6f270
i 15 j 15 sizei 16 sizej 16 _out 7
i 15 j 15 sizei 16 sizej 32 _out 103
i 15 j 15 sizei 32 sizej 16 _out 7
i 15 j 15 sizei 32 sizej 32 _out 103
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 18, check correct
Current pList size 18, grow
Current pList size 330, eliminate equvalents
Current pList size 79, check correct
SynProg: (sizej < (i + i))
SynProg: (sizej < (i + i))
Start search condition, Complete, program found (sizej < (i + i))
succeed

Start search node 0xb6a330
i 15 j 15 sizei 16 sizej 16 _out 7
i 15 j 15 sizei 32 sizej 16 _out 7
Searched Program: 
Init pList size 17, check correct
SynProg: 7
SynProg: 7
Complete, program found 7

Start search node 0xb6e8c0
i 15 j 15 sizei 16 sizej 32 _out 103
i 15 j 15 sizei 32 sizej 32 _out 103
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 136, check correct
Current pList size 136, grow
Current pList size 18768, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 17, check correct
Current pList size 17, grow
Current pList size 325, eliminate equvalents
Current pList size 68, check correct
Current pList size 68, grow
Current pList size 6255, eliminate equvalents
Current pList size 372, check correct
Current pList size 372, grow
Current pList size 203703, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Current node size 2 Split to two: left size 2 right size 0
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 17, check correct
Current pList size 17, grow
Current pList size 325, eliminate equvalents
Current pList size 68, check correct
Current pList size 68, grow
Current pList size 6255, eliminate equvalents
Current pList size 372, check correct
Current pList size 372, grow
Current pList size 203703, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 18, check correct
Current pList size 18, grow
Current pList size 330, eliminate equvalents
Current pList size 79, check correct
Current pList size 79, grow
Current pList size 7311, eliminate equvalents
Current pList size 509, check correct
Current pList size 509, grow
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 360, eliminate equvalents
Current pList size 102, check correct
Current pList size 102, grow
Current pList size 7840, eliminate equvalents
Current pList size 590, check correct
Current pList size 590, grow
Start search condition, Time out for bottem up search
faild
--------------------------------------, dump tree after search
i 15 j 15 sizei 8 sizej 8 _out -1
i 15 j 15 sizei 8 sizej 16 _out -1
i 15 j 15 sizei 8 sizej 32 _out -1
i 15 j 15 sizei 16 sizej 8 _out -1
i 15 j 15 sizei 32 sizej 8 _out -1
i 15 j 15 sizei 16 sizej 16 _out 7
i 15 j 15 sizei 32 sizej 16 _out 7
i 15 j 15 sizei 16 sizej 32 _out 103
i 15 j 15 sizei 32 sizej 32 _out 103
Searched Program: 
--------------------------------------
--------------------------------------, dump search result start
Not yet founded, (T^T)
--------------------------------------
