Input output examples:
    i 12 j 29 sizei 8 sizej 8    _out -1
    i 12 j 29 sizei 8 sizej 16    _out -1
    i 12 j 29 sizei 8 sizej 32    _out -1
    i 12 j 29 sizei 16 sizej 8    _out -1
    i 12 j 29 sizei 16 sizej 16    _out -1
    i 12 j 29 sizei 16 sizej 32    _out 99
    i 12 j 29 sizei 32 sizej 8    _out -1
    i 12 j 29 sizei 32 sizej 16    _out -1
    i 12 j 29 sizei 32 sizej 32    _out 117
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x1ff04a0
i 12 j 29 sizei 8 sizej 8 _out -1
i 12 j 29 sizei 8 sizej 16 _out -1
i 12 j 29 sizei 8 sizej 32 _out -1
i 12 j 29 sizei 16 sizej 8 _out -1
i 12 j 29 sizei 16 sizej 16 _out -1
i 12 j 29 sizei 16 sizej 32 _out 99
i 12 j 29 sizei 32 sizej 8 _out -1
i 12 j 29 sizei 32 sizej 16 _out -1
i 12 j 29 sizei 32 sizej 32 _out 117
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 156, check correct
Current pList size 156, grow
Current pList size 24648, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 7 right size 2
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 26, check correct
Current pList size 26, grow
Current pList size 406, eliminate equvalents
Current pList size 118, check correct
SynProg: ((i < sizei) && (j < sizej))
SynProg: ((i < sizei) && (j < sizej))
Complete, program found ((i < sizei) && (j < sizej))

Start search node 0x1fef9b0
i 12 j 29 sizei 8 sizej 8 _out -1
i 12 j 29 sizei 8 sizej 16 _out -1
i 12 j 29 sizei 8 sizej 32 _out -1
i 12 j 29 sizei 16 sizej 8 _out -1
i 12 j 29 sizei 16 sizej 16 _out -1
i 12 j 29 sizei 32 sizej 8 _out -1
i 12 j 29 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1fefcd0
i 12 j 29 sizei 16 sizej 32 _out 99
i 12 j 29 sizei 32 sizej 32 _out 117
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 141, check correct
Current pList size 141, grow
Current pList size 20163, eliminate equvalents
Current pList size 7263, check correct
Current pList size 7263, grow
Time out for bottem up search
Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Complete, program found (j < sizei)

Start search node 0x1febc90
i 12 j 29 sizei 16 sizej 32 _out 99
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 116, check correct
SynProg: (9 * 11)
SynProg: (9 * 11)
Complete, program found (9 * 11)

Start search node 0x1febab0
i 12 j 29 sizei 32 sizej 32 _out 117
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 110, check correct
Current pList size 110, grow
Current pList size 12320, eliminate equvalents
Current pList size 2706, check correct
SynProg: (j + (8 * 11))
SynProg: (j + (8 * 11))
Complete, program found (j + (8 * 11))
--------------------------------------, dump tree after search
i 12 j 29 sizei 8 sizej 8 _out 1
i 12 j 29 sizei 8 sizej 16 _out 1
i 12 j 29 sizei 8 sizej 32 _out 1
i 12 j 29 sizei 16 sizej 8 _out 1
i 12 j 29 sizei 16 sizej 16 _out 1
i 12 j 29 sizei 16 sizej 32 _out 0
i 12 j 29 sizei 32 sizej 8 _out 1
i 12 j 29 sizei 32 sizej 16 _out 1
i 12 j 29 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (j < sizej)) then -1 else (if (j < sizei) then (9 * 11) else (j + (8 * 11))))
L---i 12 j 29 sizei 8 sizej 8 _out -1
L---i 12 j 29 sizei 8 sizej 16 _out -1
L---i 12 j 29 sizei 8 sizej 32 _out -1
L---i 12 j 29 sizei 16 sizej 8 _out -1
L---i 12 j 29 sizei 16 sizej 16 _out -1
L---i 12 j 29 sizei 32 sizej 8 _out -1
L---i 12 j 29 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 12 j 29 sizei 16 sizej 32 _out 1
R---i 12 j 29 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizei) then (9 * 11) else (j + (8 * 11)))
R---L---i 12 j 29 sizei 16 sizej 32 _out 99
Searched Program: (9 * 11)
R---R---i 12 j 29 sizei 32 sizej 32 _out 117
Searched Program: (j + (8 * 11))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (j < sizej)) then -1 else (if (j < sizei) then (9 * 11) else (j + (8 * 11))))
--------------------------------------
