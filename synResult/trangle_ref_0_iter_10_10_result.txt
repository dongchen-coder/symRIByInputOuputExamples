Input output examples:
    i 10 j 10 sizei 8 sizej 8    _out -1
    i 10 j 10 sizei 8 sizej 16    _out -1
    i 10 j 10 sizei 8 sizej 32    _out -1
    i 10 j 10 sizei 16 sizej 8    _out -1
    i 10 j 10 sizei 16 sizej 16    _out 38
    i 10 j 10 sizei 16 sizej 32    _out 22
    i 10 j 10 sizei 32 sizej 8    _out -1
    i 10 j 10 sizei 32 sizej 16    _out 38
    i 10 j 10 sizei 32 sizej 32    _out 134
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x14f94a0
i 10 j 10 sizei 8 sizej 8 _out -1
i 10 j 10 sizei 8 sizej 16 _out -1
i 10 j 10 sizei 8 sizej 32 _out -1
i 10 j 10 sizei 16 sizej 8 _out -1
i 10 j 10 sizei 16 sizej 16 _out 38
i 10 j 10 sizei 16 sizej 32 _out 22
i 10 j 10 sizei 32 sizej 8 _out -1
i 10 j 10 sizei 32 sizej 16 _out 38
i 10 j 10 sizei 32 sizej 32 _out 134
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Current pList size 7864, check correct
Current pList size 7864, grow
Time out for bottem up search
Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 16, check correct
Current pList size 16, grow
Current pList size 171, eliminate equvalents
Current pList size 65, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Complete, program found ((i < sizei) && (i < sizej))

Start search node 0x14f8eb0
i 10 j 10 sizei 8 sizej 8 _out -1
i 10 j 10 sizei 8 sizej 16 _out -1
i 10 j 10 sizei 8 sizej 32 _out -1
i 10 j 10 sizei 16 sizej 8 _out -1
i 10 j 10 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x14f9270
i 10 j 10 sizei 16 sizej 16 _out 38
i 10 j 10 sizei 16 sizej 32 _out 22
i 10 j 10 sizei 32 sizej 16 _out 38
i 10 j 10 sizei 32 sizej 32 _out 134
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Current pList size 7864, check correct
Current pList size 7864, grow
Time out for bottem up search
Current node size 4 Split to two: left size 3 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 13, check correct
Current pList size 13, grow
Current pList size 150, eliminate equvalents
Current pList size 44, check correct
Current pList size 44, grow
Current pList size 1851, eliminate equvalents
Current pList size 178, check correct
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
Complete, program found ((! (sizei < sizej) ) && ((i + i) < sizej))

Start search node 0x14f4f60
i 10 j 10 sizei 16 sizej 16 _out 38
i 10 j 10 sizei 16 sizej 32 _out 22
i 10 j 10 sizei 32 sizej 16 _out 38
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Current pList size 7864, check correct
SynProg: ((sizej * -1) + (6 * 9))
SynProg: ((sizej * -1) + (6 * 9))
Complete, program found ((sizej * -1) + (6 * 9))

Start search node 0x14f4ba0
i 10 j 10 sizei 32 sizej 32 _out 134
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 94, check correct
Current pList size 94, grow
Current pList size 9024, eliminate equvalents
Current pList size 1935, check correct
SynProg: (2 + (11 * 12))
SynProg: (2 + (11 * 12))
Complete, program found (2 + (11 * 12))
--------------------------------------, dump tree after search
i 10 j 10 sizei 8 sizej 8 _out 1
i 10 j 10 sizei 8 sizej 16 _out 1
i 10 j 10 sizei 8 sizej 32 _out 1
i 10 j 10 sizei 16 sizej 8 _out 1
i 10 j 10 sizei 16 sizej 16 _out 0
i 10 j 10 sizei 16 sizej 32 _out 0
i 10 j 10 sizei 32 sizej 8 _out 1
i 10 j 10 sizei 32 sizej 16 _out 0
i 10 j 10 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (i < sizej)) then -1 else (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then ((sizej * -1) + (6 * 9)) else (2 + (11 * 12))))
L---i 10 j 10 sizei 8 sizej 8 _out -1
L---i 10 j 10 sizei 8 sizej 16 _out -1
L---i 10 j 10 sizei 8 sizej 32 _out -1
L---i 10 j 10 sizei 16 sizej 8 _out -1
L---i 10 j 10 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 10 j 10 sizei 16 sizej 16 _out 1
R---i 10 j 10 sizei 16 sizej 32 _out 1
R---i 10 j 10 sizei 32 sizej 16 _out 1
R---i 10 j 10 sizei 32 sizej 32 _out 0
Searched Program: (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then ((sizej * -1) + (6 * 9)) else (2 + (11 * 12)))
R---L---i 10 j 10 sizei 16 sizej 16 _out 38
R---L---i 10 j 10 sizei 16 sizej 32 _out 22
R---L---i 10 j 10 sizei 32 sizej 16 _out 38
Searched Program: ((sizej * -1) + (6 * 9))
R---R---i 10 j 10 sizei 32 sizej 32 _out 134
Searched Program: (2 + (11 * 12))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (i < sizej)) then -1 else (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then ((sizej * -1) + (6 * 9)) else (2 + (11 * 12))))
--------------------------------------
