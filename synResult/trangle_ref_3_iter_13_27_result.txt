Input output examples:
    i 13 j 27 sizei 8 sizej 8    _out -1
    i 13 j 27 sizei 8 sizej 16    _out -1
    i 13 j 27 sizei 8 sizej 32    _out -1
    i 13 j 27 sizei 16 sizej 8    _out -1
    i 13 j 27 sizei 16 sizej 16    _out -1
    i 13 j 27 sizei 16 sizej 32    _out 115
    i 13 j 27 sizei 32 sizej 8    _out -1
    i 13 j 27 sizei 32 sizej 16    _out -1
    i 13 j 27 sizei 32 sizej 32    _out 115
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x8b84a0
i 13 j 27 sizei 8 sizej 8 _out -1
i 13 j 27 sizei 8 sizej 16 _out -1
i 13 j 27 sizei 8 sizej 32 _out -1
i 13 j 27 sizei 16 sizej 8 _out -1
i 13 j 27 sizei 16 sizej 16 _out -1
i 13 j 27 sizei 16 sizej 32 _out 115
i 13 j 27 sizei 32 sizej 8 _out -1
i 13 j 27 sizei 32 sizej 16 _out -1
i 13 j 27 sizei 32 sizej 32 _out 115
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 169, check correct
Current pList size 169, grow
Current pList size 28899, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 7 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 32, check correct
Current pList size 32, grow
Current pList size 721, eliminate equvalents
Current pList size 171, check correct
SynProg: ((i < sizei) && (j < sizej))
SynProg: ((i < sizei) && (j < sizej))
Start search condition, Complete, program found ((i < sizei) && (j < sizej))
succeed

Start search node 0x8b79b0
i 13 j 27 sizei 8 sizej 8 _out -1
i 13 j 27 sizei 8 sizej 16 _out -1
i 13 j 27 sizei 8 sizej 32 _out -1
i 13 j 27 sizei 16 sizej 8 _out -1
i 13 j 27 sizei 16 sizej 16 _out -1
i 13 j 27 sizei 32 sizej 8 _out -1
i 13 j 27 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x8b7cd0
i 13 j 27 sizei 16 sizej 32 _out 115
i 13 j 27 sizei 32 sizej 32 _out 115
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 154, check correct
Current pList size 154, grow
Current pList size 24024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 645, eliminate equvalents
Current pList size 127, check correct
Current pList size 127, grow
Current pList size 22893, eliminate equvalents
Current pList size 798, check correct
SynProg: (j + ((j + j) + (sizej + 2)))
SynProg: (j + ((j + j) + (sizej + 2)))
Start search condition, Complete, program found (j + ((j + j) + (sizej + 2)))
succeed

Start search node 0x8b3c90
i 13 j 27 sizei 16 sizej 32 _out 115
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 127, check correct
Current pList size 127, grow
Current pList size 16383, eliminate equvalents
Current pList size 3203, check correct
SynProg: (j + (8 * 11))
SynProg: (j + (8 * 11))
Complete, program found (j + (8 * 11))

Start search node 0x8b3ab0
i 13 j 27 sizei 32 sizej 32 _out 115
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 121, check correct
Current pList size 121, grow
Current pList size 14883, eliminate equvalents
Current pList size 3068, check correct
SynProg: (j + (8 * 11))
SynProg: (j + (8 * 11))
Complete, program found (j + (8 * 11))
--------------------------------------, dump tree after search
i 13 j 27 sizei 8 sizej 8 _out 1
i 13 j 27 sizei 8 sizej 16 _out 1
i 13 j 27 sizei 8 sizej 32 _out 1
i 13 j 27 sizei 16 sizej 8 _out 1
i 13 j 27 sizei 16 sizej 16 _out 1
i 13 j 27 sizei 16 sizej 32 _out 0
i 13 j 27 sizei 32 sizej 8 _out 1
i 13 j 27 sizei 32 sizej 16 _out 1
i 13 j 27 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (j < sizej)) then -1 else (if (j + ((j + j) + (sizej + 2))) then (j + (8 * 11)) else (j + (8 * 11))))
L---i 13 j 27 sizei 8 sizej 8 _out -1
L---i 13 j 27 sizei 8 sizej 16 _out -1
L---i 13 j 27 sizei 8 sizej 32 _out -1
L---i 13 j 27 sizei 16 sizej 8 _out -1
L---i 13 j 27 sizei 16 sizej 16 _out -1
L---i 13 j 27 sizei 32 sizej 8 _out -1
L---i 13 j 27 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 13 j 27 sizei 16 sizej 32 _out 115
R---i 13 j 27 sizei 32 sizej 32 _out 115
Searched Program: (if (j + ((j + j) + (sizej + 2))) then (j + (8 * 11)) else (j + (8 * 11)))
R---L---i 13 j 27 sizei 16 sizej 32 _out 115
Searched Program: (j + (8 * 11))
R---R---i 13 j 27 sizei 32 sizej 32 _out 115
Searched Program: (j + (8 * 11))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (j < sizej)) then -1 else (if (j + ((j + j) + (sizej + 2))) then (j + (8 * 11)) else (j + (8 * 11))))
--------------------------------------
