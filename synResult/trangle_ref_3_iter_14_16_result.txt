Input output examples:
    i 14 j 16 sizei 8 sizej 8    _out -1
    i 14 j 16 sizei 8 sizej 16    _out -1
    i 14 j 16 sizei 8 sizej 32    _out -1
    i 14 j 16 sizei 16 sizej 8    _out -1
    i 14 j 16 sizei 16 sizej 16    _out 21
    i 14 j 16 sizei 16 sizej 32    _out 109
    i 14 j 16 sizei 32 sizej 8    _out -1
    i 14 j 16 sizei 32 sizej 16    _out 21
    i 14 j 16 sizei 32 sizej 32    _out 109
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x1b1b4a0
i 14 j 16 sizei 8 sizej 8 _out -1
i 14 j 16 sizei 8 sizej 16 _out -1
i 14 j 16 sizei 8 sizej 32 _out -1
i 14 j 16 sizei 16 sizej 8 _out -1
i 14 j 16 sizei 16 sizej 16 _out 21
i 14 j 16 sizei 16 sizej 32 _out 109
i 14 j 16 sizei 32 sizej 8 _out -1
i 14 j 16 sizei 32 sizej 16 _out 21
i 14 j 16 sizei 32 sizej 32 _out 109
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 156, check correct
Current pList size 156, grow
Current pList size 24648, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 381, eliminate equvalents
Current pList size 108, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Complete, program found ((i < sizei) && (i < sizej))

Start search node 0x1b1aeb0
i 14 j 16 sizei 8 sizej 8 _out -1
i 14 j 16 sizei 8 sizej 16 _out -1
i 14 j 16 sizei 8 sizej 32 _out -1
i 14 j 16 sizei 16 sizej 8 _out -1
i 14 j 16 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1b1b270
i 14 j 16 sizei 16 sizej 16 _out 21
i 14 j 16 sizei 16 sizej 32 _out 109
i 14 j 16 sizei 32 sizej 16 _out 21
i 14 j 16 sizei 32 sizej 32 _out 109
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 156, check correct
Current pList size 156, grow
Current pList size 24648, eliminate equvalents
Time out for bottem up search
Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 20, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Complete, program found (j < sizej)

Start search node 0x1b16330
i 14 j 16 sizei 16 sizej 16 _out 21
i 14 j 16 sizei 32 sizej 16 _out 21
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 123, check correct
SynProg: (i + 7)
SynProg: (i + 7)
Complete, program found (i + 7)

Start search node 0x1b1a8c0
i 14 j 16 sizei 16 sizej 32 _out 109
i 14 j 16 sizei 32 sizej 32 _out 109
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 141, check correct
Current pList size 141, grow
Current pList size 20163, eliminate equvalents
Time out for bottem up search
Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 17, check correct
Current pList size 17, grow
Current pList size 288, eliminate equvalents
Current pList size 58, check correct
Current pList size 58, grow
Current pList size 4470, eliminate equvalents
Current pList size 287, check correct
Current pList size 287, grow
Current pList size 120573, eliminate equvalents
Time out for bottem up search
Search fcase failed
Search fcase failed
--------------------------------------, dump tree after search
i 14 j 16 sizei 8 sizej 8 _out 1
i 14 j 16 sizei 8 sizej 16 _out 1
i 14 j 16 sizei 8 sizej 32 _out 1
i 14 j 16 sizei 16 sizej 8 _out 1
i 14 j 16 sizei 16 sizej 16 _out 0
i 14 j 16 sizei 16 sizej 32 _out 0
i 14 j 16 sizei 32 sizej 8 _out 1
i 14 j 16 sizei 32 sizej 16 _out 0
i 14 j 16 sizei 32 sizej 32 _out 0
Searched Program: 
L---i 14 j 16 sizei 8 sizej 8 _out -1
L---i 14 j 16 sizei 8 sizej 16 _out -1
L---i 14 j 16 sizei 8 sizej 32 _out -1
L---i 14 j 16 sizei 16 sizej 8 _out -1
L---i 14 j 16 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 14 j 16 sizei 16 sizej 16 _out 1
R---i 14 j 16 sizei 16 sizej 32 _out 0
R---i 14 j 16 sizei 32 sizej 16 _out 1
R---i 14 j 16 sizei 32 sizej 32 _out 0
Searched Program: 
R---L---i 14 j 16 sizei 16 sizej 16 _out 21
R---L---i 14 j 16 sizei 32 sizej 16 _out 21
Searched Program: (i + 7)
R---R---i 14 j 16 sizei 16 sizej 32 _out 109
R---R---i 14 j 16 sizei 32 sizej 32 _out 109
Searched Program: 
R---R---L---i 14 j 16 sizei 16 sizej 32 _out 109
Searched Program: 
R---R---R---i 14 j 16 sizei 32 sizej 32 _out 109
Searched Program: 
--------------------------------------
--------------------------------------, dump search result start
Not yet founded, (T^T)
--------------------------------------
