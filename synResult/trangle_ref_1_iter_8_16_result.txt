Input output examples:
    i 8 j 16 sizei 8 sizej 8    _out -1
    i 8 j 16 sizei 8 sizej 16    _out 0
    i 8 j 16 sizei 8 sizej 32    _out 77
    i 8 j 16 sizei 16 sizej 8    _out -1
    i 8 j 16 sizei 16 sizej 16    _out 0
    i 8 j 16 sizei 16 sizej 32    _out 141
    i 8 j 16 sizei 32 sizej 8    _out -1
    i 8 j 16 sizei 32 sizej 16    _out 0
    i 8 j 16 sizei 32 sizej 32    _out 141
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x107a4a0
i 8 j 16 sizei 8 sizej 8 _out -1
i 8 j 16 sizei 8 sizej 16 _out 0
i 8 j 16 sizei 8 sizej 32 _out 77
i 8 j 16 sizei 16 sizej 8 _out -1
i 8 j 16 sizei 16 sizej 16 _out 0
i 8 j 16 sizei 16 sizej 32 _out 141
i 8 j 16 sizei 32 sizej 8 _out -1
i 8 j 16 sizei 32 sizej 16 _out 0
i 8 j 16 sizei 32 sizej 32 _out 141
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 3 right size 6
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 29, check correct
SynProg: (i < sizej)
SynProg: (i < sizej)
Start search condition, Complete, program found (i < sizej)
succeed

Start search node 0x107a3b0
i 8 j 16 sizei 8 sizej 8 _out -1
i 8 j 16 sizei 16 sizej 8 _out -1
i 8 j 16 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x107b900
i 8 j 16 sizei 8 sizej 16 _out 0
i 8 j 16 sizei 8 sizej 32 _out 77
i 8 j 16 sizei 16 sizej 16 _out 0
i 8 j 16 sizei 16 sizej 32 _out 141
i 8 j 16 sizei 32 sizej 16 _out 0
i 8 j 16 sizei 32 sizej 32 _out 141
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 6 Split to two: left size 3 right size 3
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 27, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x10756a0
i 8 j 16 sizei 8 sizej 16 _out 0
i 8 j 16 sizei 16 sizej 16 _out 0
i 8 j 16 sizei 32 sizej 16 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
SynProg: (1 + -1)
SynProg: (1 + -1)
Complete, program found (1 + -1)

Start search node 0x1075830
i 8 j 16 sizei 8 sizej 32 _out 77
i 8 j 16 sizei 16 sizej 32 _out 141
i 8 j 16 sizei 32 sizej 32 _out 141
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 130, check correct
Current pList size 130, grow
Current pList size 17160, eliminate equvalents
Current pList size 6110, check correct
Current pList size 6110, grow
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
SynProg: (i < sizei)
SynProg: (i < sizei)
Start search condition, Complete, program found (i < sizei)
succeed

Start search node 0x1075bf0
i 8 j 16 sizei 8 sizej 32 _out 77
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
SynProg: (7 * 11)
SynProg: (7 * 11)
Complete, program found (7 * 11)

Start search node 0x1075650
i 8 j 16 sizei 16 sizej 32 _out 141
i 8 j 16 sizei 32 sizej 32 _out 141
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 130, check correct
Current pList size 130, grow
Current pList size 17160, eliminate equvalents
Current pList size 6108, check correct
SynProg: (9 + (11 * 12))
SynProg: (9 + (11 * 12))
Complete, program found (9 + (11 * 12))
--------------------------------------, dump tree after search
i 8 j 16 sizei 8 sizej 8 _out 1
i 8 j 16 sizei 8 sizej 16 _out 0
i 8 j 16 sizei 8 sizej 32 _out 0
i 8 j 16 sizei 16 sizej 8 _out 1
i 8 j 16 sizei 16 sizej 16 _out 0
i 8 j 16 sizei 16 sizej 32 _out 0
i 8 j 16 sizei 32 sizej 8 _out 1
i 8 j 16 sizei 32 sizej 16 _out 0
i 8 j 16 sizei 32 sizej 32 _out 0
Searched Program: (if (i < sizej) then -1 else (if (j < sizej) then (1 + -1) else (if (i < sizei) then (7 * 11) else (9 + (11 * 12)))))
L---i 8 j 16 sizei 8 sizej 8 _out -1
L---i 8 j 16 sizei 16 sizej 8 _out -1
L---i 8 j 16 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 8 j 16 sizei 8 sizej 16 _out 1
R---i 8 j 16 sizei 8 sizej 32 _out 0
R---i 8 j 16 sizei 16 sizej 16 _out 1
R---i 8 j 16 sizei 16 sizej 32 _out 0
R---i 8 j 16 sizei 32 sizej 16 _out 1
R---i 8 j 16 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then (1 + -1) else (if (i < sizei) then (7 * 11) else (9 + (11 * 12))))
R---L---i 8 j 16 sizei 8 sizej 16 _out 0
R---L---i 8 j 16 sizei 16 sizej 16 _out 0
R---L---i 8 j 16 sizei 32 sizej 16 _out 0
Searched Program: (1 + -1)
R---R---i 8 j 16 sizei 8 sizej 32 _out 1
R---R---i 8 j 16 sizei 16 sizej 32 _out 0
R---R---i 8 j 16 sizei 32 sizej 32 _out 0
Searched Program: (if (i < sizei) then (7 * 11) else (9 + (11 * 12)))
R---R---L---i 8 j 16 sizei 8 sizej 32 _out 77
Searched Program: (7 * 11)
R---R---R---i 8 j 16 sizei 16 sizej 32 _out 141
R---R---R---i 8 j 16 sizei 32 sizej 32 _out 141
Searched Program: (9 + (11 * 12))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (i < sizej) then -1 else (if (j < sizej) then (1 + -1) else (if (i < sizei) then (7 * 11) else (9 + (11 * 12)))))
--------------------------------------
