Input output examples:
    i 4 j 10 sizei 8 sizej 8    _out -1
    i 4 j 10 sizei 8 sizej 16    _out 69
    i 4 j 10 sizei 8 sizej 32    _out 46
    i 4 j 10 sizei 16 sizej 8    _out -1
    i 4 j 10 sizei 16 sizej 16    _out 69
    i 4 j 10 sizei 16 sizej 32    _out 53
    i 4 j 10 sizei 32 sizej 8    _out -1
    i 4 j 10 sizei 32 sizej 16    _out 69
    i 4 j 10 sizei 32 sizej 32    _out 165
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x19e24a0
i 4 j 10 sizei 8 sizej 8 _out -1
i 4 j 10 sizei 8 sizej 16 _out 69
i 4 j 10 sizei 8 sizej 32 _out 46
i 4 j 10 sizei 16 sizej 8 _out -1
i 4 j 10 sizei 16 sizej 16 _out 69
i 4 j 10 sizei 16 sizej 32 _out 53
i 4 j 10 sizei 32 sizej 8 _out -1
i 4 j 10 sizei 32 sizej 16 _out 69
i 4 j 10 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 3 right size 6
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 22, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Complete, program found (j < sizej)

Start search node 0x19e23b0
i 4 j 10 sizei 8 sizej 8 _out -1
i 4 j 10 sizei 16 sizej 8 _out -1
i 4 j 10 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x19e3900
i 4 j 10 sizei 8 sizej 16 _out 69
i 4 j 10 sizei 8 sizej 32 _out 46
i 4 j 10 sizei 16 sizej 16 _out 69
i 4 j 10 sizei 16 sizej 32 _out 53
i 4 j 10 sizei 32 sizej 16 _out 69
i 4 j 10 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Current node size 6 Split to two: left size 5 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 20, check correct
Current pList size 20, grow
Current pList size 343, eliminate equvalents
Current pList size 85, check correct
Current pList size 85, grow
Current pList size 7398, eliminate equvalents
Current pList size 491, check correct
SynProg: ((! (sizei < sizej) ) && ((j + j) < sizej))
SynProg: ((! (sizei < sizej) ) && ((j + j) < sizej))
Complete, program found ((! (sizei < sizej) ) && ((j + j) < sizej))

Start search node 0x19e1910
i 4 j 10 sizei 8 sizej 16 _out 69
i 4 j 10 sizei 8 sizej 32 _out 46
i 4 j 10 sizei 16 sizej 16 _out 69
i 4 j 10 sizei 16 sizej 32 _out 53
i 4 j 10 sizei 32 sizej 16 _out 69
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Current node size 5 Split to two: left size 2 right size 3
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 20, check correct
Current pList size 20, grow
Current pList size 343, eliminate equvalents
Current pList size 81, check correct
SynProg: (sizej < (j + j))
SynProg: (sizej < (j + j))
Complete, program found (sizej < (j + j))

Start search node 0x19ddec0
i 4 j 10 sizei 8 sizej 32 _out 46
i 4 j 10 sizei 16 sizej 32 _out 53
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 123, check correct
Current pList size 123, grow
Current pList size 15375, eliminate equvalents
Time out for bottem up search
Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Complete, program found (j < sizei)

Start search node 0x19dd330
i 4 j 10 sizei 8 sizej 32 _out 46
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 94, check correct
Current pList size 94, grow
Current pList size 9024, eliminate equvalents
Current pList size 1935, check correct
SynProg: (i + (j + sizej))
SynProg: (i + (j + sizej))
Complete, program found (i + (j + sizej))

Start search node 0x19e22c0
i 4 j 10 sizei 16 sizej 32 _out 53
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
Current pList size 99, grow
Current pList size 9999, eliminate equvalents
Current pList size 2045, check correct
SynProg: (i + (7 * 7))
SynProg: (i + (7 * 7))
Complete, program found (i + (7 * 7))

Start search node 0x19e4900
i 4 j 10 sizei 8 sizej 16 _out 69
i 4 j 10 sizei 16 sizej 16 _out 69
i 4 j 10 sizei 32 sizej 16 _out 69
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
Current pList size 113, grow
Current pList size 12995, eliminate equvalents
Time out for bottem up search
Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
Current pList size 18, grow
Current pList size 294, eliminate equvalents
Current pList size 59, check correct
Current pList size 59, grow
Current pList size 4321, eliminate equvalents
Current pList size 236, check correct
Current pList size 236, grow
Current pList size 79041, eliminate equvalents
Time out for bottem up search
Search fcase failed

Start search node 0x19ddb50
i 4 j 10 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 94, check correct
Current pList size 94, grow
Current pList size 9024, eliminate equvalents
Current pList size 1935, check correct
SynProg: (5 + (sizei * 5))
SynProg: (5 + (sizei * 5))
Complete, program found (5 + (sizei * 5))
Search tcase failed
Search fcase failed
--------------------------------------, dump tree after search
i 4 j 10 sizei 8 sizej 8 _out 1
i 4 j 10 sizei 8 sizej 16 _out 0
i 4 j 10 sizei 8 sizej 32 _out 0
i 4 j 10 sizei 16 sizej 8 _out 1
i 4 j 10 sizei 16 sizej 16 _out 0
i 4 j 10 sizei 16 sizej 32 _out 0
i 4 j 10 sizei 32 sizej 8 _out 1
i 4 j 10 sizei 32 sizej 16 _out 0
i 4 j 10 sizei 32 sizej 32 _out 0
Searched Program: 
L---i 4 j 10 sizei 8 sizej 8 _out -1
L---i 4 j 10 sizei 16 sizej 8 _out -1
L---i 4 j 10 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 4 j 10 sizei 8 sizej 16 _out 1
R---i 4 j 10 sizei 8 sizej 32 _out 1
R---i 4 j 10 sizei 16 sizej 16 _out 1
R---i 4 j 10 sizei 16 sizej 32 _out 1
R---i 4 j 10 sizei 32 sizej 16 _out 1
R---i 4 j 10 sizei 32 sizej 32 _out 0
Searched Program: 
R---L---i 4 j 10 sizei 8 sizej 16 _out 0
R---L---i 4 j 10 sizei 8 sizej 32 _out 1
R---L---i 4 j 10 sizei 16 sizej 16 _out 0
R---L---i 4 j 10 sizei 16 sizej 32 _out 1
R---L---i 4 j 10 sizei 32 sizej 16 _out 0
Searched Program: 
R---L---L---i 4 j 10 sizei 8 sizej 32 _out 1
R---L---L---i 4 j 10 sizei 16 sizej 32 _out 0
Searched Program: (if (j < sizei) then (i + (j + sizej)) else (i + (7 * 7)))
R---L---L---L---i 4 j 10 sizei 8 sizej 32 _out 46
Searched Program: (i + (j + sizej))
R---L---L---R---i 4 j 10 sizei 16 sizej 32 _out 53
Searched Program: (i + (7 * 7))
R---L---R---i 4 j 10 sizei 8 sizej 16 _out 69
R---L---R---i 4 j 10 sizei 16 sizej 16 _out 69
R---L---R---i 4 j 10 sizei 32 sizej 16 _out 69
Searched Program: 
R---L---R---L---i 4 j 10 sizei 8 sizej 16 _out 69
Searched Program: 
R---L---R---R---i 4 j 10 sizei 16 sizej 16 _out 69
R---L---R---R---i 4 j 10 sizei 32 sizej 16 _out 69
Searched Program: 
R---R---i 4 j 10 sizei 32 sizej 32 _out 165
Searched Program: (5 + (sizei * 5))
--------------------------------------
--------------------------------------, dump search result start
Not yet founded, (T^T)
--------------------------------------
