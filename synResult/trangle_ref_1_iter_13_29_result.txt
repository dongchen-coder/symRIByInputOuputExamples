Input output examples:
    i 13 j 29 sizei 8 sizej 8    _out -1
    i 13 j 29 sizei 8 sizej 16    _out -1
    i 13 j 29 sizei 8 sizej 32    _out -1
    i 13 j 29 sizei 16 sizej 8    _out -1
    i 13 j 29 sizei 16 sizej 16    _out -1
    i 13 j 29 sizei 16 sizej 32    _out 111
    i 13 j 29 sizei 32 sizej 8    _out -1
    i 13 j 29 sizei 32 sizej 16    _out -1
    i 13 j 29 sizei 32 sizej 32    _out 111
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x21054a0
i 13 j 29 sizei 8 sizej 8 _out -1
i 13 j 29 sizei 8 sizej 16 _out -1
i 13 j 29 sizei 8 sizej 32 _out -1
i 13 j 29 sizei 16 sizej 8 _out -1
i 13 j 29 sizei 16 sizej 16 _out -1
i 13 j 29 sizei 16 sizej 32 _out 111
i 13 j 29 sizei 32 sizej 8 _out -1
i 13 j 29 sizei 32 sizej 16 _out -1
i 13 j 29 sizei 32 sizej 32 _out 111
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 173, check correct
Current pList size 173, grow
Current pList size 30275, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 7 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 32, check correct
Current pList size 32, grow
Current pList size 721, eliminate equvalents
Current pList size 172, check correct
SynProg: ((i < sizei) && (j < sizej))
SynProg: ((i < sizei) && (j < sizej))
Start search condition, Complete, program found ((i < sizei) && (j < sizej))
succeed

Start search node 0x21049b0
i 13 j 29 sizei 8 sizej 8 _out -1
i 13 j 29 sizei 8 sizej 16 _out -1
i 13 j 29 sizei 8 sizej 32 _out -1
i 13 j 29 sizei 16 sizej 8 _out -1
i 13 j 29 sizei 16 sizej 16 _out -1
i 13 j 29 sizei 32 sizej 8 _out -1
i 13 j 29 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x2104cd0
i 13 j 29 sizei 16 sizej 32 _out 111
i 13 j 29 sizei 32 sizej 32 _out 111
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 157, check correct
Current pList size 157, grow
Current pList size 24963, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 645, eliminate equvalents
Current pList size 122, check correct
Current pList size 122, grow
Current pList size 21078, eliminate equvalents
Current pList size 786, check correct
SynProg: (i + ((sizej + sizej) + (sizej + 2)))
SynProg: (i + ((sizej + sizej) + (sizej + 2)))
Start search condition, Complete, program found (i + ((sizej + sizej) + (sizej + 2)))
succeed

Start search node 0x2100c90
i 13 j 29 sizei 16 sizej 32 _out 111
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 130, check correct
Current pList size 130, grow
Current pList size 17160, eliminate equvalents
Current pList size 3358, check correct
SynProg: (1 + (10 * 11))
SynProg: (1 + (10 * 11))
Complete, program found (1 + (10 * 11))

Start search node 0x2100ab0
i 13 j 29 sizei 32 sizej 32 _out 111
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 124, check correct
Current pList size 124, grow
Current pList size 15624, eliminate equvalents
Current pList size 3234, check correct
SynProg: (1 + (10 * 11))
SynProg: (1 + (10 * 11))
Complete, program found (1 + (10 * 11))
--------------------------------------, dump tree after search
i 13 j 29 sizei 8 sizej 8 _out 1
i 13 j 29 sizei 8 sizej 16 _out 1
i 13 j 29 sizei 8 sizej 32 _out 1
i 13 j 29 sizei 16 sizej 8 _out 1
i 13 j 29 sizei 16 sizej 16 _out 1
i 13 j 29 sizei 16 sizej 32 _out 0
i 13 j 29 sizei 32 sizej 8 _out 1
i 13 j 29 sizei 32 sizej 16 _out 1
i 13 j 29 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (j < sizej)) then -1 else (if (i + ((sizej + sizej) + (sizej + 2))) then (1 + (10 * 11)) else (1 + (10 * 11))))
L---i 13 j 29 sizei 8 sizej 8 _out -1
L---i 13 j 29 sizei 8 sizej 16 _out -1
L---i 13 j 29 sizei 8 sizej 32 _out -1
L---i 13 j 29 sizei 16 sizej 8 _out -1
L---i 13 j 29 sizei 16 sizej 16 _out -1
L---i 13 j 29 sizei 32 sizej 8 _out -1
L---i 13 j 29 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 13 j 29 sizei 16 sizej 32 _out 111
R---i 13 j 29 sizei 32 sizej 32 _out 111
Searched Program: (if (i + ((sizej + sizej) + (sizej + 2))) then (1 + (10 * 11)) else (1 + (10 * 11)))
R---L---i 13 j 29 sizei 16 sizej 32 _out 111
Searched Program: (1 + (10 * 11))
R---R---i 13 j 29 sizei 32 sizej 32 _out 111
Searched Program: (1 + (10 * 11))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (j < sizej)) then -1 else (if (i + ((sizej + sizej) + (sizej + 2))) then (1 + (10 * 11)) else (1 + (10 * 11))))
--------------------------------------
