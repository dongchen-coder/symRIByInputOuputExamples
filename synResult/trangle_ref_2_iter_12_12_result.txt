Input output examples:
    i 12 j 12 sizei 8 sizej 8    _out -1
    i 12 j 12 sizei 8 sizej 16    _out -1
    i 12 j 12 sizei 8 sizej 32    _out -1
    i 12 j 12 sizei 16 sizej 8    _out -1
    i 12 j 12 sizei 16 sizej 16    _out 34
    i 12 j 12 sizei 16 sizej 32    _out 18
    i 12 j 12 sizei 32 sizej 8    _out -1
    i 12 j 12 sizei 32 sizej 16    _out 34
    i 12 j 12 sizei 32 sizej 32    _out 130
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x8404a0
i 12 j 12 sizei 8 sizej 8 _out -1
i 12 j 12 sizei 8 sizej 16 _out -1
i 12 j 12 sizei 8 sizej 32 _out -1
i 12 j 12 sizei 16 sizej 8 _out -1
i 12 j 12 sizei 16 sizej 16 _out 34
i 12 j 12 sizei 16 sizej 32 _out 18
i 12 j 12 sizei 32 sizej 8 _out -1
i 12 j 12 sizei 32 sizej 16 _out 34
i 12 j 12 sizei 32 sizej 32 _out 130
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 360, eliminate equvalents
Current pList size 100, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Start search condition, Complete, program found ((i < sizei) && (i < sizej))
succeed

Start search node 0x83feb0
i 12 j 12 sizei 8 sizej 8 _out -1
i 12 j 12 sizei 8 sizej 16 _out -1
i 12 j 12 sizei 8 sizej 32 _out -1
i 12 j 12 sizei 16 sizej 8 _out -1
i 12 j 12 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x840270
i 12 j 12 sizei 16 sizej 16 _out 34
i 12 j 12 sizei 16 sizej 32 _out 18
i 12 j 12 sizei 32 sizej 16 _out 34
i 12 j 12 sizei 32 sizej 32 _out 130
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 3 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 18, check correct
Current pList size 18, grow
Current pList size 330, eliminate equvalents
Current pList size 79, check correct
Current pList size 79, grow
Current pList size 7311, eliminate equvalents
Current pList size 493, check correct
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
Start search condition, Complete, program found ((! (sizei < sizej) ) && ((i + i) < sizej))
succeed

Start search node 0x83bf60
i 12 j 12 sizei 16 sizej 16 _out 34
i 12 j 12 sizei 16 sizej 32 _out 18
i 12 j 12 sizei 32 sizej 16 _out 34
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 18, check correct
SynProg: (sizei < sizej)
SynProg: (sizei < sizej)
Start search condition, Complete, program found (sizei < sizej)
succeed

Start search node 0x840450
i 12 j 12 sizei 16 sizej 32 _out 18
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
SynProg: (i + 6)
SynProg: (i + 6)
Complete, program found (i + 6)

Start search node 0x840360
i 12 j 12 sizei 16 sizej 16 _out 34
i 12 j 12 sizei 32 sizej 16 _out 34
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
Current pList size 113, grow
Current pList size 12995, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 17, check correct
Current pList size 17, grow
Current pList size 325, eliminate equvalents
Current pList size 66, check correct
SynProg: (sizej + (sizej + 2))
SynProg: (sizej + (sizej + 2))
Start search condition, Complete, program found (sizej + (sizej + 2))
succeed

Start search node 0x83bc90
i 12 j 12 sizei 16 sizej 16 _out 34
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 84, check correct
Current pList size 84, grow
Current pList size 7224, eliminate equvalents
Current pList size 1275, check correct
SynProg: (i + (i + 10))
SynProg: (i + (i + 10))
Complete, program found (i + (i + 10))

Start search node 0x83f7d0
i 12 j 12 sizei 32 sizej 16 _out 34
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
SynProg: (sizei + 2)
SynProg: (sizei + 2)
Complete, program found (sizei + 2)

Start search node 0x83bba0
i 12 j 12 sizei 32 sizej 32 _out 130
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 94, check correct
Current pList size 94, grow
Current pList size 9024, eliminate equvalents
Current pList size 1935, check correct
SynProg: (2 + (sizei * 4))
SynProg: (2 + (sizei * 4))
Complete, program found (2 + (sizei * 4))
--------------------------------------, dump tree after search
i 12 j 12 sizei 8 sizej 8 _out 1
i 12 j 12 sizei 8 sizej 16 _out 1
i 12 j 12 sizei 8 sizej 32 _out 1
i 12 j 12 sizei 16 sizej 8 _out 1
i 12 j 12 sizei 16 sizej 16 _out 0
i 12 j 12 sizei 16 sizej 32 _out 0
i 12 j 12 sizei 32 sizej 8 _out 1
i 12 j 12 sizei 32 sizej 16 _out 0
i 12 j 12 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (i < sizej)) then -1 else (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then (if (sizei < sizej) then (i + 6) else (if (sizej + (sizej + 2)) then (i + (i + 10)) else (sizei + 2))) else (2 + (sizei * 4))))
L---i 12 j 12 sizei 8 sizej 8 _out -1
L---i 12 j 12 sizei 8 sizej 16 _out -1
L---i 12 j 12 sizei 8 sizej 32 _out -1
L---i 12 j 12 sizei 16 sizej 8 _out -1
L---i 12 j 12 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 12 j 12 sizei 16 sizej 16 _out 1
R---i 12 j 12 sizei 16 sizej 32 _out 1
R---i 12 j 12 sizei 32 sizej 16 _out 1
R---i 12 j 12 sizei 32 sizej 32 _out 0
Searched Program: (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then (if (sizei < sizej) then (i + 6) else (if (sizej + (sizej + 2)) then (i + (i + 10)) else (sizei + 2))) else (2 + (sizei * 4)))
R---L---i 12 j 12 sizei 16 sizej 16 _out 0
R---L---i 12 j 12 sizei 16 sizej 32 _out 1
R---L---i 12 j 12 sizei 32 sizej 16 _out 0
Searched Program: (if (sizei < sizej) then (i + 6) else (if (sizej + (sizej + 2)) then (i + (i + 10)) else (sizei + 2)))
R---L---L---i 12 j 12 sizei 16 sizej 32 _out 18
Searched Program: (i + 6)
R---L---R---i 12 j 12 sizei 16 sizej 16 _out 34
R---L---R---i 12 j 12 sizei 32 sizej 16 _out 34
Searched Program: (if (sizej + (sizej + 2)) then (i + (i + 10)) else (sizei + 2))
R---L---R---L---i 12 j 12 sizei 16 sizej 16 _out 34
Searched Program: (i + (i + 10))
R---L---R---R---i 12 j 12 sizei 32 sizej 16 _out 34
Searched Program: (sizei + 2)
R---R---i 12 j 12 sizei 32 sizej 32 _out 130
Searched Program: (2 + (sizei * 4))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (i < sizej)) then -1 else (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then (if (sizei < sizej) then (i + 6) else (if (sizej + (sizej + 2)) then (i + (i + 10)) else (sizei + 2))) else (2 + (sizei * 4))))
--------------------------------------
