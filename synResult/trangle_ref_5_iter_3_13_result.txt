Input output examples:
    i 3 j 13 sizei 8 sizej 8    _out -1
    i 3 j 13 sizei 8 sizej 16    _out 0
    i 3 j 13 sizei 8 sizej 32    _out 120
    i 3 j 13 sizei 16 sizej 8    _out -1
    i 3 j 13 sizei 16 sizej 16    _out 0
    i 3 j 13 sizei 16 sizej 32    _out 72
    i 3 j 13 sizei 32 sizej 8    _out -1
    i 3 j 13 sizei 32 sizej 16    _out 0
    i 3 j 13 sizei 32 sizej 32    _out 0
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x151b4a0
i 3 j 13 sizei 8 sizej 8 _out -1
i 3 j 13 sizei 8 sizej 16 _out 0
i 3 j 13 sizei 8 sizej 32 _out 120
i 3 j 13 sizei 16 sizej 8 _out -1
i 3 j 13 sizei 16 sizej 16 _out 0
i 3 j 13 sizei 16 sizej 32 _out 72
i 3 j 13 sizei 32 sizej 8 _out -1
i 3 j 13 sizei 32 sizej 16 _out 0
i 3 j 13 sizei 32 sizej 32 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 3 right size 6
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 22, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Complete, program found (j < sizej)

Start search node 0x151b3b0
i 3 j 13 sizei 8 sizej 8 _out -1
i 3 j 13 sizei 16 sizej 8 _out -1
i 3 j 13 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x151c900
i 3 j 13 sizei 8 sizej 16 _out 0
i 3 j 13 sizei 8 sizej 32 _out 120
i 3 j 13 sizei 16 sizej 16 _out 0
i 3 j 13 sizei 16 sizej 32 _out 72
i 3 j 13 sizei 32 sizej 16 _out 0
i 3 j 13 sizei 32 sizej 32 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Current node size 6 Split to two: left size 4 right size 2
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 20, check correct
Current pList size 20, grow
Current pList size 343, eliminate equvalents
Current pList size 87, check correct
SynProg: (sizej < (j + sizei))
SynProg: (sizej < (j + sizei))
Complete, program found (sizej < (j + sizei))

Start search node 0x1516420
i 3 j 13 sizei 8 sizej 16 _out 0
i 3 j 13 sizei 16 sizej 16 _out 0
i 3 j 13 sizei 32 sizej 16 _out 0
i 3 j 13 sizei 32 sizej 32 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
SynProg: (1 + -1)
SynProg: (1 + -1)
Complete, program found (1 + -1)

Start search node 0x15168d0
i 3 j 13 sizei 8 sizej 32 _out 120
i 3 j 13 sizei 16 sizej 32 _out 72
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 138, check correct
Current pList size 138, grow
Current pList size 19320, eliminate equvalents
Time out for bottem up search
Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Complete, program found (j < sizei)

Start search node 0x15167e0
i 3 j 13 sizei 16 sizej 32 _out 72
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
SynProg: (6 * 12)
SynProg: (6 * 12)
Complete, program found (6 * 12)

Start search node 0x1516a10
i 3 j 13 sizei 8 sizej 32 _out 120
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 107, check correct
SynProg: (10 * 12)
SynProg: (10 * 12)
Complete, program found (10 * 12)
--------------------------------------, dump tree after search
i 3 j 13 sizei 8 sizej 8 _out 1
i 3 j 13 sizei 8 sizej 16 _out 0
i 3 j 13 sizei 8 sizej 32 _out 0
i 3 j 13 sizei 16 sizej 8 _out 1
i 3 j 13 sizei 16 sizej 16 _out 0
i 3 j 13 sizei 16 sizej 32 _out 0
i 3 j 13 sizei 32 sizej 8 _out 1
i 3 j 13 sizei 32 sizej 16 _out 0
i 3 j 13 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then -1 else (if (sizej < (j + sizei)) then (1 + -1) else (if (j < sizei) then (6 * 12) else (10 * 12))))
L---i 3 j 13 sizei 8 sizej 8 _out -1
L---i 3 j 13 sizei 16 sizej 8 _out -1
L---i 3 j 13 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 3 j 13 sizei 8 sizej 16 _out 1
R---i 3 j 13 sizei 8 sizej 32 _out 0
R---i 3 j 13 sizei 16 sizej 16 _out 1
R---i 3 j 13 sizei 16 sizej 32 _out 0
R---i 3 j 13 sizei 32 sizej 16 _out 1
R---i 3 j 13 sizei 32 sizej 32 _out 1
Searched Program: (if (sizej < (j + sizei)) then (1 + -1) else (if (j < sizei) then (6 * 12) else (10 * 12)))
R---L---i 3 j 13 sizei 8 sizej 16 _out 0
R---L---i 3 j 13 sizei 16 sizej 16 _out 0
R---L---i 3 j 13 sizei 32 sizej 16 _out 0
R---L---i 3 j 13 sizei 32 sizej 32 _out 0
Searched Program: (1 + -1)
R---R---i 3 j 13 sizei 8 sizej 32 _out 0
R---R---i 3 j 13 sizei 16 sizej 32 _out 1
Searched Program: (if (j < sizei) then (6 * 12) else (10 * 12))
R---R---L---i 3 j 13 sizei 16 sizej 32 _out 72
Searched Program: (6 * 12)
R---R---R---i 3 j 13 sizei 8 sizej 32 _out 120
Searched Program: (10 * 12)
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (j < sizej) then -1 else (if (sizej < (j + sizei)) then (1 + -1) else (if (j < sizei) then (6 * 12) else (10 * 12))))
--------------------------------------
