Input output examples:
    i 13 j 26 sizei 8 sizej 8    _out -1
    i 13 j 26 sizei 8 sizej 16    _out -1
    i 13 j 26 sizei 8 sizej 32    _out -1
    i 13 j 26 sizei 16 sizej 8    _out -1
    i 13 j 26 sizei 16 sizej 16    _out -1
    i 13 j 26 sizei 16 sizej 32    _out 115
    i 13 j 26 sizei 32 sizej 8    _out -1
    i 13 j 26 sizei 32 sizej 16    _out -1
    i 13 j 26 sizei 32 sizej 32    _out 115
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x12484a0
i 13 j 26 sizei 8 sizej 8 _out -1
i 13 j 26 sizei 8 sizej 16 _out -1
i 13 j 26 sizei 8 sizej 32 _out -1
i 13 j 26 sizei 16 sizej 8 _out -1
i 13 j 26 sizei 16 sizej 16 _out -1
i 13 j 26 sizei 16 sizej 32 _out 115
i 13 j 26 sizei 32 sizej 8 _out -1
i 13 j 26 sizei 32 sizej 16 _out -1
i 13 j 26 sizei 32 sizej 32 _out 115
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 167, check correct
Current pList size 167, grow
Current pList size 28223, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 7 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 31, check correct
Current pList size 31, grow
Current pList size 661, eliminate equvalents
Current pList size 152, check correct
SynProg: ((i < sizei) && (j < sizej))
SynProg: ((i < sizei) && (j < sizej))
Start search condition, Complete, program found ((i < sizei) && (j < sizej))
succeed

Start search node 0x12479b0
i 13 j 26 sizei 8 sizej 8 _out -1
i 13 j 26 sizei 8 sizej 16 _out -1
i 13 j 26 sizei 8 sizej 32 _out -1
i 13 j 26 sizei 16 sizej 8 _out -1
i 13 j 26 sizei 16 sizej 16 _out -1
i 13 j 26 sizei 32 sizej 8 _out -1
i 13 j 26 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1247cd0
i 13 j 26 sizei 16 sizej 32 _out 115
i 13 j 26 sizei 32 sizej 32 _out 115
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 152, check correct
Current pList size 152, grow
Current pList size 23408, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
Current pList size 23, grow
Current pList size 585, eliminate equvalents
Current pList size 107, check correct
Current pList size 107, grow
Current pList size 16083, eliminate equvalents
Current pList size 669, check correct
SynProg: ((i + (sizej + sizej)) + ((sizej + 2) + (2 + 2)))
SynProg: ((i + (sizej + sizej)) + ((sizej + 2) + (2 + 2)))
Start search condition, Complete, program found ((i + (sizej + sizej)) + ((sizej + 2) + (2 + 2)))
succeed

Start search node 0x1243c90
i 13 j 26 sizei 16 sizej 32 _out 115
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 123, check correct
Current pList size 123, grow
Current pList size 15375, eliminate equvalents
Current pList size 2924, check correct
SynProg: (sizei + (9 * 11))
SynProg: (sizei + (9 * 11))
Complete, program found (sizei + (9 * 11))

Start search node 0x1243ab0
i 13 j 26 sizei 32 sizej 32 _out 115
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 119, check correct
Current pList size 119, grow
Current pList size 14399, eliminate equvalents
Current pList size 2855, check correct
SynProg: (5 + (10 * 11))
SynProg: (5 + (10 * 11))
Complete, program found (5 + (10 * 11))
--------------------------------------, dump tree after search
i 13 j 26 sizei 8 sizej 8 _out 1
i 13 j 26 sizei 8 sizej 16 _out 1
i 13 j 26 sizei 8 sizej 32 _out 1
i 13 j 26 sizei 16 sizej 8 _out 1
i 13 j 26 sizei 16 sizej 16 _out 1
i 13 j 26 sizei 16 sizej 32 _out 0
i 13 j 26 sizei 32 sizej 8 _out 1
i 13 j 26 sizei 32 sizej 16 _out 1
i 13 j 26 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (j < sizej)) then -1 else (if ((i + (sizej + sizej)) + ((sizej + 2) + (2 + 2))) then (sizei + (9 * 11)) else (5 + (10 * 11))))
L---i 13 j 26 sizei 8 sizej 8 _out -1
L---i 13 j 26 sizei 8 sizej 16 _out -1
L---i 13 j 26 sizei 8 sizej 32 _out -1
L---i 13 j 26 sizei 16 sizej 8 _out -1
L---i 13 j 26 sizei 16 sizej 16 _out -1
L---i 13 j 26 sizei 32 sizej 8 _out -1
L---i 13 j 26 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 13 j 26 sizei 16 sizej 32 _out 115
R---i 13 j 26 sizei 32 sizej 32 _out 115
Searched Program: (if ((i + (sizej + sizej)) + ((sizej + 2) + (2 + 2))) then (sizei + (9 * 11)) else (5 + (10 * 11)))
R---L---i 13 j 26 sizei 16 sizej 32 _out 115
Searched Program: (sizei + (9 * 11))
R---R---i 13 j 26 sizei 32 sizej 32 _out 115
Searched Program: (5 + (10 * 11))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (j < sizej)) then -1 else (if ((i + (sizej + sizej)) + ((sizej + 2) + (2 + 2))) then (sizei + (9 * 11)) else (5 + (10 * 11))))
--------------------------------------
