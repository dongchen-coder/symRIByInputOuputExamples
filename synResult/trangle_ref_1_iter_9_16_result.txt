Input output examples:
    i 9 j 16 sizei 8 sizej 8    _out -1
    i 9 j 16 sizei 8 sizej 16    _out -1
    i 9 j 16 sizei 8 sizej 32    _out -1
    i 9 j 16 sizei 16 sizej 8    _out -1
    i 9 j 16 sizei 16 sizej 16    _out 0
    i 9 j 16 sizei 16 sizej 32    _out 135
    i 9 j 16 sizei 32 sizej 8    _out -1
    i 9 j 16 sizei 32 sizej 16    _out 0
    i 9 j 16 sizei 32 sizej 32    _out 135
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0xb024a0
i 9 j 16 sizei 8 sizej 8 _out -1
i 9 j 16 sizei 8 sizej 16 _out -1
i 9 j 16 sizei 8 sizej 32 _out -1
i 9 j 16 sizei 16 sizej 8 _out -1
i 9 j 16 sizei 16 sizej 16 _out 0
i 9 j 16 sizei 16 sizej 32 _out 135
i 9 j 16 sizei 32 sizej 8 _out -1
i 9 j 16 sizei 32 sizej 16 _out 0
i 9 j 16 sizei 32 sizej 32 _out 135
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 29, check correct
Current pList size 29, grow
Current pList size 636, eliminate equvalents
Current pList size 143, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Start search condition, Complete, program found ((i < sizei) && (i < sizej))
succeed

Start search node 0xb01eb0
i 9 j 16 sizei 8 sizej 8 _out -1
i 9 j 16 sizei 8 sizej 16 _out -1
i 9 j 16 sizei 8 sizej 32 _out -1
i 9 j 16 sizei 16 sizej 8 _out -1
i 9 j 16 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0xb02270
i 9 j 16 sizei 16 sizej 16 _out 0
i 9 j 16 sizei 16 sizej 32 _out 135
i 9 j 16 sizei 32 sizej 16 _out 0
i 9 j 16 sizei 32 sizej 32 _out 135
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 25, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0xafd330
i 9 j 16 sizei 16 sizej 16 _out 0
i 9 j 16 sizei 32 sizej 16 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
SynProg: (1 + -1)
SynProg: (1 + -1)
Complete, program found (1 + -1)

Start search node 0xb018c0
i 9 j 16 sizei 16 sizej 32 _out 135
i 9 j 16 sizei 32 sizej 32 _out 135
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 130, check correct
Current pList size 130, grow
Current pList size 17160, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 528, eliminate equvalents
Current pList size 88, check correct
Current pList size 88, grow
Current pList size 10725, eliminate equvalents
Current pList size 491, check correct
Current pList size 491, grow
Start search condition, Time out for bottem up search
faild
Current node size 2 Split to two: left size 2 right size 0
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 528, eliminate equvalents
Current pList size 88, check correct
Current pList size 88, grow
Current pList size 10725, eliminate equvalents
Current pList size 491, check correct
Current pList size 491, grow
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 25, check correct
Current pList size 25, grow
Current pList size 598, eliminate equvalents
Current pList size 116, check correct
Current pList size 116, grow
Current pList size 16471, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 29, check correct
Current pList size 29, grow
Current pList size 636, eliminate equvalents
Current pList size 143, check correct
Current pList size 143, grow
Current pList size 17200, eliminate equvalents
Start search condition, Time out for bottem up search
faild
--------------------------------------, dump tree after search
i 9 j 16 sizei 8 sizej 8 _out -1
i 9 j 16 sizei 8 sizej 16 _out -1
i 9 j 16 sizei 8 sizej 32 _out -1
i 9 j 16 sizei 16 sizej 8 _out -1
i 9 j 16 sizei 32 sizej 8 _out -1
i 9 j 16 sizei 16 sizej 16 _out 0
i 9 j 16 sizei 32 sizej 16 _out 0
i 9 j 16 sizei 16 sizej 32 _out 135
i 9 j 16 sizei 32 sizej 32 _out 135
Searched Program: 
--------------------------------------
--------------------------------------, dump search result start
Not yet founded, (T^T)
--------------------------------------
