Input output examples:
    i 4 j 17 sizei 8 sizej 8    _out -1
    i 4 j 17 sizei 8 sizej 16    _out -1
    i 4 j 17 sizei 8 sizej 32    _out 51
    i 4 j 17 sizei 16 sizej 8    _out -1
    i 4 j 17 sizei 16 sizej 16    _out -1
    i 4 j 17 sizei 16 sizej 32    _out 165
    i 4 j 17 sizei 32 sizej 8    _out -1
    i 4 j 17 sizei 32 sizej 16    _out -1
    i 4 j 17 sizei 32 sizej 32    _out 165
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x105c4a0
i 4 j 17 sizei 8 sizej 8 _out -1
i 4 j 17 sizei 8 sizej 16 _out -1
i 4 j 17 sizei 8 sizej 32 _out 51
i 4 j 17 sizei 16 sizej 8 _out -1
i 4 j 17 sizei 16 sizej 16 _out -1
i 4 j 17 sizei 16 sizej 32 _out 165
i 4 j 17 sizei 32 sizej 8 _out -1
i 4 j 17 sizei 32 sizej 16 _out -1
i 4 j 17 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 151, check correct
Current pList size 151, grow
Current pList size 23103, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 6 right size 3
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 27, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x105bdc0
i 4 j 17 sizei 8 sizej 8 _out -1
i 4 j 17 sizei 8 sizej 16 _out -1
i 4 j 17 sizei 16 sizej 8 _out -1
i 4 j 17 sizei 16 sizej 16 _out -1
i 4 j 17 sizei 32 sizej 8 _out -1
i 4 j 17 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x105c090
i 4 j 17 sizei 8 sizej 32 _out 51
i 4 j 17 sizei 16 sizej 32 _out 165
i 4 j 17 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 140, check correct
Current pList size 140, grow
Current pList size 19880, eliminate equvalents
Current pList size 6995, check correct
Current pList size 6995, grow
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 528, eliminate equvalents
Current pList size 90, check correct
SynProg: (j < (i + sizei))
SynProg: (j < (i + sizei))
Start search condition, Complete, program found (j < (i + sizei))
succeed

Start search node 0x1057790
i 4 j 17 sizei 8 sizej 32 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 109, check correct
SynProg: (j * 3)
SynProg: (j * 3)
Complete, program found (j * 3)

Start search node 0x1059090
i 4 j 17 sizei 16 sizej 32 _out 165
i 4 j 17 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 140, check correct
Current pList size 140, grow
Current pList size 19880, eliminate equvalents
Current pList size 6995, check correct
SynProg: (5 + (sizej * 5))
SynProg: (5 + (sizej * 5))
Complete, program found (5 + (sizej * 5))
--------------------------------------, dump tree after search
i 4 j 17 sizei 8 sizej 8 _out 1
i 4 j 17 sizei 8 sizej 16 _out 1
i 4 j 17 sizei 8 sizej 32 _out 0
i 4 j 17 sizei 16 sizej 8 _out 1
i 4 j 17 sizei 16 sizej 16 _out 1
i 4 j 17 sizei 16 sizej 32 _out 0
i 4 j 17 sizei 32 sizej 8 _out 1
i 4 j 17 sizei 32 sizej 16 _out 1
i 4 j 17 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then -1 else (if (j < (i + sizei)) then (j * 3) else (5 + (sizej * 5))))
L---i 4 j 17 sizei 8 sizej 8 _out -1
L---i 4 j 17 sizei 8 sizej 16 _out -1
L---i 4 j 17 sizei 16 sizej 8 _out -1
L---i 4 j 17 sizei 16 sizej 16 _out -1
L---i 4 j 17 sizei 32 sizej 8 _out -1
L---i 4 j 17 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 4 j 17 sizei 8 sizej 32 _out 1
R---i 4 j 17 sizei 16 sizej 32 _out 0
R---i 4 j 17 sizei 32 sizej 32 _out 0
Searched Program: (if (j < (i + sizei)) then (j * 3) else (5 + (sizej * 5)))
R---L---i 4 j 17 sizei 8 sizej 32 _out 51
Searched Program: (j * 3)
R---R---i 4 j 17 sizei 16 sizej 32 _out 165
R---R---i 4 j 17 sizei 32 sizej 32 _out 165
Searched Program: (5 + (sizej * 5))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (j < sizej) then -1 else (if (j < (i + sizei)) then (j * 3) else (5 + (sizej * 5))))
--------------------------------------
