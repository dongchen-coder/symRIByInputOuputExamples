Input output examples:
    i 6 j 16 sizei 8 sizej 8    _out -1
    i 6 j 16 sizei 8 sizej 16    _out 51
    i 6 j 16 sizei 8 sizej 32    _out 51
    i 6 j 16 sizei 16 sizej 8    _out -1
    i 6 j 16 sizei 16 sizej 16    _out 0
    i 6 j 16 sizei 16 sizej 32    _out 153
    i 6 j 16 sizei 32 sizej 8    _out -1
    i 6 j 16 sizei 32 sizej 16    _out 0
    i 6 j 16 sizei 32 sizej 32    _out 153
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0xcbe4a0
i 6 j 16 sizei 8 sizej 8 _out -1
i 6 j 16 sizei 8 sizej 16 _out 51
i 6 j 16 sizei 8 sizej 32 _out 51
i 6 j 16 sizei 16 sizej 8 _out -1
i 6 j 16 sizei 16 sizej 16 _out 0
i 6 j 16 sizei 16 sizej 32 _out 153
i 6 j 16 sizei 32 sizej 8 _out -1
i 6 j 16 sizei 32 sizej 16 _out 0
i 6 j 16 sizei 32 sizej 32 _out 153
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 3 right size 6
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 28, check correct
SynProg: (sizej < j)
SynProg: (sizej < j)
Start search condition, Complete, program found (sizej < j)
succeed

Start search node 0xcbe3b0
i 6 j 16 sizei 8 sizej 8 _out -1
i 6 j 16 sizei 16 sizej 8 _out -1
i 6 j 16 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0xcbf900
i 6 j 16 sizei 8 sizej 16 _out 51
i 6 j 16 sizei 8 sizej 32 _out 51
i 6 j 16 sizei 16 sizej 16 _out 0
i 6 j 16 sizei 16 sizej 32 _out 153
i 6 j 16 sizei 32 sizej 16 _out 0
i 6 j 16 sizei 32 sizej 32 _out 153
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 6 Split to two: left size 4 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 27, check correct
Current pList size 27, grow
Current pList size 666, eliminate equvalents
Current pList size 131, check correct
Current pList size 131, grow
Current pList size 19194, eliminate equvalents
Current pList size 802, check correct
SynProg: ((j < sizej) && (! (sizei < j) ))
SynProg: ((j < sizej) && (! (sizei < j) ))
Start search condition, Complete, program found ((j < sizej) && (! (sizei < j) ))
succeed

Start search node 0xcb9420
i 6 j 16 sizei 8 sizej 16 _out 51
i 6 j 16 sizei 8 sizej 32 _out 51
i 6 j 16 sizei 16 sizej 16 _out 0
i 6 j 16 sizei 32 sizej 16 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 25, check correct
SynProg: (sizei < j)
SynProg: (sizei < j)
Start search condition, Complete, program found (sizei < j)
succeed

Start search node 0xcbdf00
i 6 j 16 sizei 16 sizej 16 _out 0
i 6 j 16 sizei 32 sizej 16 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
SynProg: (1 + -1)
SynProg: (1 + -1)
Complete, program found (1 + -1)

Start search node 0xcb9ce0
i 6 j 16 sizei 8 sizej 16 _out 51
i 6 j 16 sizei 8 sizej 32 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
Current pList size 113, grow
Current pList size 12995, eliminate equvalents
Current pList size 4431, check correct
SynProg: (i + (5 * 9))
SynProg: (i + (5 * 9))
Complete, program found (i + (5 * 9))

Start search node 0xcb98d0
i 6 j 16 sizei 16 sizej 32 _out 153
i 6 j 16 sizei 32 sizej 32 _out 153
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 130, check correct
Current pList size 130, grow
Current pList size 17160, eliminate equvalents
Current pList size 6108, check correct
SynProg: (sizej + (11 * 11))
SynProg: (sizej + (11 * 11))
Complete, program found (sizej + (11 * 11))
--------------------------------------, dump tree after search
i 6 j 16 sizei 8 sizej 8 _out 1
i 6 j 16 sizei 8 sizej 16 _out 0
i 6 j 16 sizei 8 sizej 32 _out 0
i 6 j 16 sizei 16 sizej 8 _out 1
i 6 j 16 sizei 16 sizej 16 _out 0
i 6 j 16 sizei 16 sizej 32 _out 0
i 6 j 16 sizei 32 sizej 8 _out 1
i 6 j 16 sizei 32 sizej 16 _out 0
i 6 j 16 sizei 32 sizej 32 _out 0
Searched Program: (if (sizej < j) then -1 else (if ((j < sizej) && (! (sizei < j) )) then (if (sizei < j) then (1 + -1) else (i + (5 * 9))) else (sizej + (11 * 11))))
L---i 6 j 16 sizei 8 sizej 8 _out -1
L---i 6 j 16 sizei 16 sizej 8 _out -1
L---i 6 j 16 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 6 j 16 sizei 8 sizej 16 _out 1
R---i 6 j 16 sizei 8 sizej 32 _out 1
R---i 6 j 16 sizei 16 sizej 16 _out 1
R---i 6 j 16 sizei 16 sizej 32 _out 0
R---i 6 j 16 sizei 32 sizej 16 _out 1
R---i 6 j 16 sizei 32 sizej 32 _out 0
Searched Program: (if ((j < sizej) && (! (sizei < j) )) then (if (sizei < j) then (1 + -1) else (i + (5 * 9))) else (sizej + (11 * 11)))
R---L---i 6 j 16 sizei 8 sizej 16 _out 0
R---L---i 6 j 16 sizei 8 sizej 32 _out 0
R---L---i 6 j 16 sizei 16 sizej 16 _out 1
R---L---i 6 j 16 sizei 32 sizej 16 _out 1
Searched Program: (if (sizei < j) then (1 + -1) else (i + (5 * 9)))
R---L---L---i 6 j 16 sizei 16 sizej 16 _out 0
R---L---L---i 6 j 16 sizei 32 sizej 16 _out 0
Searched Program: (1 + -1)
R---L---R---i 6 j 16 sizei 8 sizej 16 _out 51
R---L---R---i 6 j 16 sizei 8 sizej 32 _out 51
Searched Program: (i + (5 * 9))
R---R---i 6 j 16 sizei 16 sizej 32 _out 153
R---R---i 6 j 16 sizei 32 sizej 32 _out 153
Searched Program: (sizej + (11 * 11))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (sizej < j) then -1 else (if ((j < sizej) && (! (sizei < j) )) then (if (sizei < j) then (1 + -1) else (i + (5 * 9))) else (sizej + (11 * 11))))
--------------------------------------
