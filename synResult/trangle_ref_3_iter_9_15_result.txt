Input output examples:
    i 9 j 15 sizei 8 sizej 8    _out -1
    i 9 j 15 sizei 8 sizej 16    _out -1
    i 9 j 15 sizei 8 sizej 32    _out -1
    i 9 j 15 sizei 16 sizej 8    _out -1
    i 9 j 15 sizei 16 sizej 16    _out 43
    i 9 j 15 sizei 16 sizej 32    _out 139
    i 9 j 15 sizei 32 sizej 8    _out -1
    i 9 j 15 sizei 32 sizej 16    _out 43
    i 9 j 15 sizei 32 sizej 32    _out 139
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x1a204a0
i 9 j 15 sizei 8 sizej 8 _out -1
i 9 j 15 sizei 8 sizej 16 _out -1
i 9 j 15 sizei 8 sizej 32 _out -1
i 9 j 15 sizei 16 sizej 8 _out -1
i 9 j 15 sizei 16 sizej 16 _out 43
i 9 j 15 sizei 16 sizej 32 _out 139
i 9 j 15 sizei 32 sizej 8 _out -1
i 9 j 15 sizei 32 sizej 16 _out 43
i 9 j 15 sizei 32 sizej 32 _out 139
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 28, check correct
Current pList size 28, grow
Current pList size 675, eliminate equvalents
Current pList size 157, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Start search condition, Complete, program found ((i < sizei) && (i < sizej))
succeed

Start search node 0x1a1feb0
i 9 j 15 sizei 8 sizej 8 _out -1
i 9 j 15 sizei 8 sizej 16 _out -1
i 9 j 15 sizei 8 sizej 32 _out -1
i 9 j 15 sizei 16 sizej 8 _out -1
i 9 j 15 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1a20270
i 9 j 15 sizei 16 sizej 16 _out 43
i 9 j 15 sizei 16 sizej 32 _out 139
i 9 j 15 sizei 32 sizej 16 _out 43
i 9 j 15 sizei 32 sizej 32 _out 139
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 645, eliminate equvalents
Current pList size 134, check correct
SynProg: (sizej < (i + i))
SynProg: (sizej < (i + i))
Start search condition, Complete, program found (sizej < (i + i))
succeed

Start search node 0x1a1b330
i 9 j 15 sizei 16 sizej 16 _out 43
i 9 j 15 sizei 32 sizej 16 _out 43
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 125, check correct
Current pList size 125, grow
Current pList size 15875, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 580, eliminate equvalents
Current pList size 101, check correct
SynProg: ((i + i) + (i + sizej))
SynProg: ((i + i) + (i + sizej))
Start search condition, Complete, program found ((i + i) + (i + sizej))
succeed

Start search node 0x1a200e0
i 9 j 15 sizei 16 sizej 16 _out 43
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 94, check correct
Current pList size 94, grow
Current pList size 9024, eliminate equvalents
Current pList size 1553, check correct
SynProg: (j + (sizei + 12))
SynProg: (j + (sizei + 12))
Complete, program found (j + (sizei + 12))

Start search node 0x1a1b4c0
i 9 j 15 sizei 32 sizej 16 _out 43
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 110, check correct
SynProg: (sizei + 11)
SynProg: (sizei + 11)
Complete, program found (sizei + 11)

Start search node 0x1a1f8c0
i 9 j 15 sizei 16 sizej 32 _out 139
i 9 j 15 sizei 32 sizej 32 _out 139
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 136, check correct
Current pList size 136, grow
Current pList size 18768, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
Current pList size 23, grow
Current pList size 640, eliminate equvalents
Current pList size 120, check correct
Current pList size 120, grow
Current pList size 20373, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Current node size 2 Split to two: left size 2 right size 0
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
Current pList size 23, grow
Current pList size 640, eliminate equvalents
Current pList size 120, check correct
Current pList size 120, grow
Current pList size 20373, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 645, eliminate equvalents
Current pList size 134, check correct
Current pList size 134, grow
Current pList size 23316, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 28, check correct
Current pList size 28, grow
Current pList size 675, eliminate equvalents
Current pList size 157, check correct
Current pList size 157, grow
Current pList size 23845, eliminate equvalents
Current pList size 1162, check correct
Current pList size 1162, grow
Start search condition, Time out for bottem up search
faild
--------------------------------------, dump tree after search
i 9 j 15 sizei 8 sizej 8 _out -1
i 9 j 15 sizei 8 sizej 16 _out -1
i 9 j 15 sizei 8 sizej 32 _out -1
i 9 j 15 sizei 16 sizej 8 _out -1
i 9 j 15 sizei 32 sizej 8 _out -1
i 9 j 15 sizei 16 sizej 16 _out 43
i 9 j 15 sizei 32 sizej 16 _out 43
i 9 j 15 sizei 16 sizej 32 _out 139
i 9 j 15 sizei 32 sizej 32 _out 139
Searched Program: 
--------------------------------------
--------------------------------------, dump search result start
Not yet founded, (T^T)
--------------------------------------
