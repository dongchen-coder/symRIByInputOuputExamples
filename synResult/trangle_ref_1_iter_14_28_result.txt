Input output examples:
    i 14 j 28 sizei 8 sizej 8    _out -1
    i 14 j 28 sizei 8 sizej 16    _out -1
    i 14 j 28 sizei 8 sizej 32    _out -1
    i 14 j 28 sizei 16 sizej 8    _out -1
    i 14 j 28 sizei 16 sizej 16    _out -1
    i 14 j 28 sizei 16 sizej 32    _out 105
    i 14 j 28 sizei 32 sizej 8    _out -1
    i 14 j 28 sizei 32 sizej 16    _out -1
    i 14 j 28 sizei 32 sizej 32    _out 105
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x19034a0
i 14 j 28 sizei 8 sizej 8 _out -1
i 14 j 28 sizei 8 sizej 16 _out -1
i 14 j 28 sizei 8 sizej 32 _out -1
i 14 j 28 sizei 16 sizej 8 _out -1
i 14 j 28 sizei 16 sizej 16 _out -1
i 14 j 28 sizei 16 sizej 32 _out 105
i 14 j 28 sizei 32 sizej 8 _out -1
i 14 j 28 sizei 32 sizej 16 _out -1
i 14 j 28 sizei 32 sizej 32 _out 105
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 163, check correct
Current pList size 163, grow
Current pList size 26895, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 7 right size 2
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 25, check correct
Current pList size 25, grow
Current pList size 364, eliminate equvalents
Current pList size 101, check correct
SynProg: ((i < sizei) && (j < sizej))
SynProg: ((i < sizei) && (j < sizej))
Complete, program found ((i < sizei) && (j < sizej))

Start search node 0x19029b0
i 14 j 28 sizei 8 sizej 8 _out -1
i 14 j 28 sizei 8 sizej 16 _out -1
i 14 j 28 sizei 8 sizej 32 _out -1
i 14 j 28 sizei 16 sizej 8 _out -1
i 14 j 28 sizei 16 sizej 16 _out -1
i 14 j 28 sizei 32 sizej 8 _out -1
i 14 j 28 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1902cd0
i 14 j 28 sizei 16 sizej 32 _out 105
i 14 j 28 sizei 32 sizej 32 _out 105
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 147, check correct
Current pList size 147, grow
Current pList size 21903, eliminate equvalents
Current pList size 7598, check correct
SynProg: (j + (7 * 11))
SynProg: (j + (7 * 11))
Complete, program found (j + (7 * 11))
--------------------------------------, dump tree after search
i 14 j 28 sizei 8 sizej 8 _out 1
i 14 j 28 sizei 8 sizej 16 _out 1
i 14 j 28 sizei 8 sizej 32 _out 1
i 14 j 28 sizei 16 sizej 8 _out 1
i 14 j 28 sizei 16 sizej 16 _out 1
i 14 j 28 sizei 16 sizej 32 _out 0
i 14 j 28 sizei 32 sizej 8 _out 1
i 14 j 28 sizei 32 sizej 16 _out 1
i 14 j 28 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (j < sizej)) then -1 else (j + (7 * 11)))
L---i 14 j 28 sizei 8 sizej 8 _out -1
L---i 14 j 28 sizei 8 sizej 16 _out -1
L---i 14 j 28 sizei 8 sizej 32 _out -1
L---i 14 j 28 sizei 16 sizej 8 _out -1
L---i 14 j 28 sizei 16 sizej 16 _out -1
L---i 14 j 28 sizei 32 sizej 8 _out -1
L---i 14 j 28 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 14 j 28 sizei 16 sizej 32 _out 105
R---i 14 j 28 sizei 32 sizej 32 _out 105
Searched Program: (j + (7 * 11))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (j < sizej)) then -1 else (j + (7 * 11)))
--------------------------------------
