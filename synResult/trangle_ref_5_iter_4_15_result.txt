Input output examples:
    i 4 j 15 sizei 8 sizej 8    _out -1
    i 4 j 15 sizei 8 sizej 16    _out 0
    i 4 j 15 sizei 8 sizej 32    _out 114
    i 4 j 15 sizei 16 sizej 8    _out -1
    i 4 j 15 sizei 16 sizej 16    _out 0
    i 4 j 15 sizei 16 sizej 32    _out 0
    i 4 j 15 sizei 32 sizej 8    _out -1
    i 4 j 15 sizei 32 sizej 16    _out 0
    i 4 j 15 sizei 32 sizej 32    _out 0
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x16ca4a0
i 4 j 15 sizei 8 sizej 8 _out -1
i 4 j 15 sizei 8 sizej 16 _out 0
i 4 j 15 sizei 8 sizej 32 _out 114
i 4 j 15 sizei 16 sizej 8 _out -1
i 4 j 15 sizei 16 sizej 16 _out 0
i 4 j 15 sizei 16 sizej 32 _out 0
i 4 j 15 sizei 32 sizej 8 _out -1
i 4 j 15 sizei 32 sizej 16 _out 0
i 4 j 15 sizei 32 sizej 32 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 3 right size 6
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 27, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x16ca3b0
i 4 j 15 sizei 8 sizej 8 _out -1
i 4 j 15 sizei 16 sizej 8 _out -1
i 4 j 15 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x16cb900
i 4 j 15 sizei 8 sizej 16 _out 0
i 4 j 15 sizei 8 sizej 32 _out 114
i 4 j 15 sizei 16 sizej 16 _out 0
i 4 j 15 sizei 16 sizej 32 _out 0
i 4 j 15 sizei 32 sizej 16 _out 0
i 4 j 15 sizei 32 sizej 32 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 6 Split to two: left size 5 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 25, check correct
Current pList size 25, grow
Current pList size 598, eliminate equvalents
Current pList size 122, check correct
SynProg: ((sizei + sizei) < sizej)
SynProg: ((sizei + sizei) < sizej)
Start search condition, Complete, program found ((sizei + sizei) < sizej)
succeed

Start search node 0x16c9910
i 4 j 15 sizei 8 sizej 16 _out 0
i 4 j 15 sizei 16 sizej 16 _out 0
i 4 j 15 sizei 16 sizej 32 _out 0
i 4 j 15 sizei 32 sizej 16 _out 0
i 4 j 15 sizei 32 sizej 32 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
SynProg: (1 + -1)
SynProg: (1 + -1)
Complete, program found (1 + -1)

Start search node 0x16c5b50
i 4 j 15 sizei 8 sizej 32 _out 114
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 105, check correct
Current pList size 105, grow
Current pList size 11235, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 1 Split current node, failed
