Input output examples:
    i 7 j 29 sizei 8 sizej 8    _out -1
    i 7 j 29 sizei 8 sizej 16    _out -1
    i 7 j 29 sizei 8 sizej 32    _out 51
    i 7 j 29 sizei 16 sizej 8    _out -1
    i 7 j 29 sizei 16 sizej 16    _out -1
    i 7 j 29 sizei 16 sizej 32    _out 99
    i 7 j 29 sizei 32 sizej 8    _out -1
    i 7 j 29 sizei 32 sizej 16    _out -1
    i 7 j 29 sizei 32 sizej 32    _out 147
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x6cd4a0
i 7 j 29 sizei 8 sizej 8 _out -1
i 7 j 29 sizei 8 sizej 16 _out -1
i 7 j 29 sizei 8 sizej 32 _out 51
i 7 j 29 sizei 16 sizej 8 _out -1
i 7 j 29 sizei 16 sizej 16 _out -1
i 7 j 29 sizei 16 sizej 32 _out 99
i 7 j 29 sizei 32 sizej 8 _out -1
i 7 j 29 sizei 32 sizej 16 _out -1
i 7 j 29 sizei 32 sizej 32 _out 147
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 156, check correct
Current pList size 156, grow
Current pList size 24648, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 6 right size 3
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 28, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x6ccdc0
i 7 j 29 sizei 8 sizej 8 _out -1
i 7 j 29 sizei 8 sizej 16 _out -1
i 7 j 29 sizei 16 sizej 8 _out -1
i 7 j 29 sizei 16 sizej 16 _out -1
i 7 j 29 sizei 32 sizej 8 _out -1
i 7 j 29 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x6cd090
i 7 j 29 sizei 8 sizej 32 _out 51
i 7 j 29 sizei 16 sizej 32 _out 99
i 7 j 29 sizei 32 sizej 32 _out 147
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 141, check correct
Current pList size 141, grow
Current pList size 20163, eliminate equvalents
Current pList size 7263, check correct
Current pList size 7263, grow
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 645, eliminate equvalents
Current pList size 125, check correct
SynProg: (j < (sizei + sizei))
SynProg: (j < (sizei + sizei))
Start search condition, Complete, program found (j < (sizei + sizei))
succeed

Start search node 0x6c8790
i 7 j 29 sizei 8 sizej 32 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 110, check correct
Current pList size 110, grow
Current pList size 12320, eliminate equvalents
Current pList size 2706, check correct
SynProg: (i + (sizej + 12))
SynProg: (i + (sizej + 12))
Complete, program found (i + (sizej + 12))

Start search node 0x6ca090
i 7 j 29 sizei 16 sizej 32 _out 99
i 7 j 29 sizei 32 sizej 32 _out 147
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 141, check correct
Current pList size 141, grow
Current pList size 20163, eliminate equvalents
Current pList size 7263, check correct
Current pList size 7263, grow
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Start search condition, Complete, program found (j < sizei)
succeed

Start search node 0x6c8b50
i 7 j 29 sizei 16 sizej 32 _out 99
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 116, check correct
SynProg: (9 * 11)
SynProg: (9 * 11)
Complete, program found (9 * 11)

Start search node 0x6c8a10
i 7 j 29 sizei 32 sizej 32 _out 147
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 110, check correct
Current pList size 110, grow
Current pList size 12320, eliminate equvalents
Current pList size 2706, check correct
SynProg: (2 + (j * 5))
SynProg: (2 + (j * 5))
Complete, program found (2 + (j * 5))
--------------------------------------, dump tree after search
i 7 j 29 sizei 8 sizej 8 _out 1
i 7 j 29 sizei 8 sizej 16 _out 1
i 7 j 29 sizei 8 sizej 32 _out 0
i 7 j 29 sizei 16 sizej 8 _out 1
i 7 j 29 sizei 16 sizej 16 _out 1
i 7 j 29 sizei 16 sizej 32 _out 0
i 7 j 29 sizei 32 sizej 8 _out 1
i 7 j 29 sizei 32 sizej 16 _out 1
i 7 j 29 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then -1 else (if (j < (sizei + sizei)) then (i + (sizej + 12)) else (if (j < sizei) then (9 * 11) else (2 + (j * 5)))))
L---i 7 j 29 sizei 8 sizej 8 _out -1
L---i 7 j 29 sizei 8 sizej 16 _out -1
L---i 7 j 29 sizei 16 sizej 8 _out -1
L---i 7 j 29 sizei 16 sizej 16 _out -1
L---i 7 j 29 sizei 32 sizej 8 _out -1
L---i 7 j 29 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 7 j 29 sizei 8 sizej 32 _out 1
R---i 7 j 29 sizei 16 sizej 32 _out 0
R---i 7 j 29 sizei 32 sizej 32 _out 0
Searched Program: (if (j < (sizei + sizei)) then (i + (sizej + 12)) else (if (j < sizei) then (9 * 11) else (2 + (j * 5))))
R---L---i 7 j 29 sizei 8 sizej 32 _out 51
Searched Program: (i + (sizej + 12))
R---R---i 7 j 29 sizei 16 sizej 32 _out 1
R---R---i 7 j 29 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizei) then (9 * 11) else (2 + (j * 5)))
R---R---L---i 7 j 29 sizei 16 sizej 32 _out 99
Searched Program: (9 * 11)
R---R---R---i 7 j 29 sizei 32 sizej 32 _out 147
Searched Program: (2 + (j * 5))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (j < sizej) then -1 else (if (j < (sizei + sizei)) then (i + (sizej + 12)) else (if (j < sizei) then (9 * 11) else (2 + (j * 5)))))
--------------------------------------
