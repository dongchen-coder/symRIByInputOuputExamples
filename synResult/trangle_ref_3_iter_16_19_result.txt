Input output examples:
    i 16 j 19 sizei 8 sizej 8    _out -1
    i 16 j 19 sizei 8 sizej 16    _out -1
    i 16 j 19 sizei 8 sizej 32    _out -1
    i 16 j 19 sizei 16 sizej 8    _out -1
    i 16 j 19 sizei 16 sizej 16    _out -1
    i 16 j 19 sizei 16 sizej 32    _out 97
    i 16 j 19 sizei 32 sizej 8    _out -1
    i 16 j 19 sizei 32 sizej 16    _out -1
    i 16 j 19 sizei 32 sizej 32    _out 97
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x7e54a0
i 16 j 19 sizei 8 sizej 8 _out -1
i 16 j 19 sizei 8 sizej 16 _out -1
i 16 j 19 sizei 8 sizej 32 _out -1
i 16 j 19 sizei 16 sizej 8 _out -1
i 16 j 19 sizei 16 sizej 16 _out -1
i 16 j 19 sizei 16 sizej 32 _out 97
i 16 j 19 sizei 32 sizej 8 _out -1
i 16 j 19 sizei 32 sizej 16 _out -1
i 16 j 19 sizei 32 sizej 32 _out 97
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 164, check correct
Current pList size 164, grow
Current pList size 27224, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 7 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 30, check correct
Current pList size 30, grow
Current pList size 696, eliminate equvalents
Current pList size 165, check correct
Current pList size 165, grow
Current pList size 24486, eliminate equvalents
Current pList size 1314, check correct
SynProg: ((i < sizej) && (! (sizei < i) ))
SynProg: ((i < sizej) && (! (sizei < i) ))
Start search condition, Complete, program found ((i < sizej) && (! (sizei < i) ))
succeed

Start search node 0x7e49b0
i 16 j 19 sizei 8 sizej 8 _out -1
i 16 j 19 sizei 8 sizej 16 _out -1
i 16 j 19 sizei 8 sizej 32 _out -1
i 16 j 19 sizei 16 sizej 8 _out -1
i 16 j 19 sizei 16 sizej 16 _out -1
i 16 j 19 sizei 32 sizej 8 _out -1
i 16 j 19 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x7e4cd0
i 16 j 19 sizei 16 sizej 32 _out 97
i 16 j 19 sizei 32 sizej 32 _out 97
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 148, check correct
Current pList size 148, grow
Current pList size 22200, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
Current pList size 23, grow
Current pList size 585, eliminate equvalents
Current pList size 107, check correct
Current pList size 107, grow
Current pList size 16083, eliminate equvalents
Current pList size 679, check correct
SynProg: ((j + j) + ((j + j) + (j + 2)))
SynProg: ((j + j) + ((j + j) + (j + 2)))
Start search condition, Complete, program found ((j + j) + ((j + j) + (j + 2)))
succeed

Start search node 0x7e0c90
i 16 j 19 sizei 16 sizej 32 _out 97
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 115, check correct
Current pList size 115, grow
Current pList size 13455, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 1 Split current node, failed
