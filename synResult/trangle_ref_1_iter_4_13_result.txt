Input output examples:
    i 4 j 13 sizei 8 sizej 8    _out -1
    i 4 j 13 sizei 8 sizej 16    _out 51
    i 4 j 13 sizei 8 sizej 32    _out 51
    i 4 j 13 sizei 16 sizej 8    _out -1
    i 4 j 13 sizei 16 sizej 16    _out 69
    i 4 j 13 sizei 16 sizej 32    _out 61
    i 4 j 13 sizei 32 sizej 8    _out -1
    i 4 j 13 sizei 32 sizej 16    _out 69
    i 4 j 13 sizei 32 sizej 32    _out 165
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x19564a0
i 4 j 13 sizei 8 sizej 8 _out -1
i 4 j 13 sizei 8 sizej 16 _out 51
i 4 j 13 sizei 8 sizej 32 _out 51
i 4 j 13 sizei 16 sizej 8 _out -1
i 4 j 13 sizei 16 sizej 16 _out 69
i 4 j 13 sizei 16 sizej 32 _out 61
i 4 j 13 sizei 32 sizej 8 _out -1
i 4 j 13 sizei 32 sizej 16 _out 69
i 4 j 13 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 3 right size 6
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 27, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x19563b0
i 4 j 13 sizei 8 sizej 8 _out -1
i 4 j 13 sizei 16 sizej 8 _out -1
i 4 j 13 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1957900
i 4 j 13 sizei 8 sizej 16 _out 51
i 4 j 13 sizei 8 sizej 32 _out 51
i 4 j 13 sizei 16 sizej 16 _out 69
i 4 j 13 sizei 16 sizej 32 _out 61
i 4 j 13 sizei 32 sizej 16 _out 69
i 4 j 13 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 6 Split to two: left size 3 right size 3
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 25, check correct
SynProg: (sizei < sizej)
SynProg: (sizei < sizej)
Start search condition, Complete, program found (sizei < sizej)
succeed

Start search node 0x19516a0
i 4 j 13 sizei 8 sizej 16 _out 51
i 4 j 13 sizei 8 sizej 32 _out 51
i 4 j 13 sizei 16 sizej 32 _out 61
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 2 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Start search condition, Complete, program found (j < sizei)
succeed

Start search node 0x1953090
i 4 j 13 sizei 8 sizej 16 _out 51
i 4 j 13 sizei 8 sizej 32 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 118, check correct
Current pList size 118, grow
Current pList size 14160, eliminate equvalents
Current pList size 4706, check correct
SynProg: (1 + (5 * 10))
SynProg: (1 + (5 * 10))
Complete, program found (1 + (5 * 10))

Start search node 0x1951b00
i 4 j 13 sizei 16 sizej 32 _out 61
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
Current pList size 113, grow
Current pList size 12995, eliminate equvalents
Current pList size 2536, check correct
SynProg: (j + (sizei + sizej))
SynProg: (j + (sizei + sizej))
Complete, program found (j + (sizei + sizej))

Start search node 0x1951830
i 4 j 13 sizei 16 sizej 16 _out 69
i 4 j 13 sizei 32 sizej 16 _out 69
i 4 j 13 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 2 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 580, eliminate equvalents
Current pList size 112, check correct
SynProg: (sizej < (i + j))
SynProg: (sizej < (i + j))
Start search condition, Complete, program found (sizej < (i + j))
succeed

Start search node 0x19519c0
i 4 j 13 sizei 16 sizej 16 _out 69
i 4 j 13 sizei 32 sizej 16 _out 69
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 129, check correct
Current pList size 129, grow
Current pList size 16899, eliminate equvalents
Current pList size 5571, check correct
SynProg: (i + (j * 5))
SynProg: (i + (j * 5))
Complete, program found (i + (j * 5))

Start search node 0x1955780
i 4 j 13 sizei 32 sizej 32 _out 165
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 107, check correct
Current pList size 107, grow
Current pList size 11663, eliminate equvalents
Current pList size 2348, check correct
SynProg: (5 + (sizei * 5))
SynProg: (5 + (sizei * 5))
Complete, program found (5 + (sizei * 5))
--------------------------------------, dump tree after search
i 4 j 13 sizei 8 sizej 8 _out 1
i 4 j 13 sizei 8 sizej 16 _out 0
i 4 j 13 sizei 8 sizej 32 _out 0
i 4 j 13 sizei 16 sizej 8 _out 1
i 4 j 13 sizei 16 sizej 16 _out 0
i 4 j 13 sizei 16 sizej 32 _out 0
i 4 j 13 sizei 32 sizej 8 _out 1
i 4 j 13 sizei 32 sizej 16 _out 0
i 4 j 13 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then -1 else (if (sizei < sizej) then (if (j < sizei) then (1 + (5 * 10)) else (j + (sizei + sizej))) else (if (sizej < (i + j)) then (i + (j * 5)) else (5 + (sizei * 5)))))
L---i 4 j 13 sizei 8 sizej 8 _out -1
L---i 4 j 13 sizei 16 sizej 8 _out -1
L---i 4 j 13 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 4 j 13 sizei 8 sizej 16 _out 1
R---i 4 j 13 sizei 8 sizej 32 _out 1
R---i 4 j 13 sizei 16 sizej 16 _out 0
R---i 4 j 13 sizei 16 sizej 32 _out 1
R---i 4 j 13 sizei 32 sizej 16 _out 0
R---i 4 j 13 sizei 32 sizej 32 _out 0
Searched Program: (if (sizei < sizej) then (if (j < sizei) then (1 + (5 * 10)) else (j + (sizei + sizej))) else (if (sizej < (i + j)) then (i + (j * 5)) else (5 + (sizei * 5))))
R---L---i 4 j 13 sizei 8 sizej 16 _out 1
R---L---i 4 j 13 sizei 8 sizej 32 _out 1
R---L---i 4 j 13 sizei 16 sizej 32 _out 0
Searched Program: (if (j < sizei) then (1 + (5 * 10)) else (j + (sizei + sizej)))
R---L---L---i 4 j 13 sizei 8 sizej 16 _out 51
R---L---L---i 4 j 13 sizei 8 sizej 32 _out 51
Searched Program: (1 + (5 * 10))
R---L---R---i 4 j 13 sizei 16 sizej 32 _out 61
Searched Program: (j + (sizei + sizej))
R---R---i 4 j 13 sizei 16 sizej 16 _out 1
R---R---i 4 j 13 sizei 32 sizej 16 _out 1
R---R---i 4 j 13 sizei 32 sizej 32 _out 0
Searched Program: (if (sizej < (i + j)) then (i + (j * 5)) else (5 + (sizei * 5)))
R---R---L---i 4 j 13 sizei 16 sizej 16 _out 69
R---R---L---i 4 j 13 sizei 32 sizej 16 _out 69
Searched Program: (i + (j * 5))
R---R---R---i 4 j 13 sizei 32 sizej 32 _out 165
Searched Program: (5 + (sizei * 5))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (j < sizej) then -1 else (if (sizei < sizej) then (if (j < sizei) then (1 + (5 * 10)) else (j + (sizei + sizej))) else (if (sizej < (i + j)) then (i + (j * 5)) else (5 + (sizei * 5)))))
--------------------------------------
