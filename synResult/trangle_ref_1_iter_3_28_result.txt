Input output examples:
    i 3 j 28 sizei 8 sizej 8    _out -1
    i 3 j 28 sizei 8 sizej 16    _out -1
    i 3 j 28 sizei 8 sizej 32    _out 51
    i 3 j 28 sizei 16 sizej 8    _out -1
    i 3 j 28 sizei 16 sizej 16    _out -1
    i 3 j 28 sizei 16 sizej 32    _out 99
    i 3 j 28 sizei 32 sizej 8    _out -1
    i 3 j 28 sizei 32 sizej 16    _out -1
    i 3 j 28 sizei 32 sizej 32    _out 171
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x1f284a0
i 3 j 28 sizei 8 sizej 8 _out -1
i 3 j 28 sizei 8 sizej 16 _out -1
i 3 j 28 sizei 8 sizej 32 _out 51
i 3 j 28 sizei 16 sizej 8 _out -1
i 3 j 28 sizei 16 sizej 16 _out -1
i 3 j 28 sizei 16 sizej 32 _out 99
i 3 j 28 sizei 32 sizej 8 _out -1
i 3 j 28 sizei 32 sizej 16 _out -1
i 3 j 28 sizei 32 sizej 32 _out 171
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 153, check correct
Current pList size 153, grow
Current pList size 23715, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 6 right size 3
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 28, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x1f27dc0
i 3 j 28 sizei 8 sizej 8 _out -1
i 3 j 28 sizei 8 sizej 16 _out -1
i 3 j 28 sizei 16 sizej 8 _out -1
i 3 j 28 sizei 16 sizej 16 _out -1
i 3 j 28 sizei 32 sizej 8 _out -1
i 3 j 28 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1f28090
i 3 j 28 sizei 8 sizej 32 _out 51
i 3 j 28 sizei 16 sizej 32 _out 99
i 3 j 28 sizei 32 sizej 32 _out 171
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 137, check correct
Current pList size 137, grow
Current pList size 19043, eliminate equvalents
Current pList size 6817, check correct
Current pList size 6817, grow
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 645, eliminate equvalents
Current pList size 114, check correct
SynProg: (j < (sizei + sizei))
SynProg: (j < (sizei + sizei))
Start search condition, Complete, program found (j < (sizei + sizei))
succeed

Start search node 0x1f23790
i 3 j 28 sizei 8 sizej 32 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 106, check correct
Current pList size 106, grow
Current pList size 11448, eliminate equvalents
Current pList size 2426, check correct
SynProg: (i + (sizei * 6))
SynProg: (i + (sizei * 6))
Complete, program found (i + (sizei * 6))

Start search node 0x1f25090
i 3 j 28 sizei 16 sizej 32 _out 99
i 3 j 28 sizei 32 sizej 32 _out 171
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 137, check correct
Current pList size 137, grow
Current pList size 19043, eliminate equvalents
Current pList size 6816, check correct
Current pList size 6816, grow
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Start search condition, Complete, program found (j < sizei)
succeed

Start search node 0x1f23b50
i 3 j 28 sizei 16 sizej 32 _out 99
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 111, check correct
SynProg: (9 * 11)
SynProg: (9 * 11)
Complete, program found (9 * 11)

Start search node 0x1f23a10
i 3 j 28 sizei 32 sizej 32 _out 171
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 106, check correct
Current pList size 106, grow
Current pList size 11448, eliminate equvalents
Current pList size 2426, check correct
SynProg: (i + (j * 6))
SynProg: (i + (j * 6))
Complete, program found (i + (j * 6))
--------------------------------------, dump tree after search
i 3 j 28 sizei 8 sizej 8 _out 1
i 3 j 28 sizei 8 sizej 16 _out 1
i 3 j 28 sizei 8 sizej 32 _out 0
i 3 j 28 sizei 16 sizej 8 _out 1
i 3 j 28 sizei 16 sizej 16 _out 1
i 3 j 28 sizei 16 sizej 32 _out 0
i 3 j 28 sizei 32 sizej 8 _out 1
i 3 j 28 sizei 32 sizej 16 _out 1
i 3 j 28 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then -1 else (if (j < (sizei + sizei)) then (i + (sizei * 6)) else (if (j < sizei) then (9 * 11) else (i + (j * 6)))))
L---i 3 j 28 sizei 8 sizej 8 _out -1
L---i 3 j 28 sizei 8 sizej 16 _out -1
L---i 3 j 28 sizei 16 sizej 8 _out -1
L---i 3 j 28 sizei 16 sizej 16 _out -1
L---i 3 j 28 sizei 32 sizej 8 _out -1
L---i 3 j 28 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 3 j 28 sizei 8 sizej 32 _out 1
R---i 3 j 28 sizei 16 sizej 32 _out 0
R---i 3 j 28 sizei 32 sizej 32 _out 0
Searched Program: (if (j < (sizei + sizei)) then (i + (sizei * 6)) else (if (j < sizei) then (9 * 11) else (i + (j * 6))))
R---L---i 3 j 28 sizei 8 sizej 32 _out 51
Searched Program: (i + (sizei * 6))
R---R---i 3 j 28 sizei 16 sizej 32 _out 1
R---R---i 3 j 28 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizei) then (9 * 11) else (i + (j * 6)))
R---R---L---i 3 j 28 sizei 16 sizej 32 _out 99
Searched Program: (9 * 11)
R---R---R---i 3 j 28 sizei 32 sizej 32 _out 171
Searched Program: (i + (j * 6))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (j < sizej) then -1 else (if (j < (sizei + sizei)) then (i + (sizei * 6)) else (if (j < sizei) then (9 * 11) else (i + (j * 6)))))
--------------------------------------
