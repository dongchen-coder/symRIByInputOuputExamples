Input output examples:
    i 11 j 13 sizei 8 sizej 8    _out -1
    i 11 j 13 sizei 8 sizej 16    _out -1
    i 11 j 13 sizei 8 sizej 32    _out -1
    i 11 j 13 sizei 16 sizej 8    _out -1
    i 11 j 13 sizei 16 sizej 16    _out 31
    i 11 j 13 sizei 16 sizej 32    _out 24
    i 11 j 13 sizei 32 sizej 8    _out -1
    i 11 j 13 sizei 32 sizej 16    _out 31
    i 11 j 13 sizei 32 sizej 32    _out 127
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x1c6b4a0
i 11 j 13 sizei 8 sizej 8 _out -1
i 11 j 13 sizei 8 sizej 16 _out -1
i 11 j 13 sizei 8 sizej 32 _out -1
i 11 j 13 sizei 16 sizej 8 _out -1
i 11 j 13 sizei 16 sizej 16 _out 31
i 11 j 13 sizei 16 sizej 32 _out 24
i 11 j 13 sizei 32 sizej 8 _out -1
i 11 j 13 sizei 32 sizej 16 _out 31
i 11 j 13 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 27, check correct
Current pList size 27, grow
Current pList size 615, eliminate equvalents
Current pList size 137, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Start search condition, Complete, program found ((i < sizei) && (i < sizej))
succeed

Start search node 0x1c6aeb0
i 11 j 13 sizei 8 sizej 8 _out -1
i 11 j 13 sizei 8 sizej 16 _out -1
i 11 j 13 sizei 8 sizej 32 _out -1
i 11 j 13 sizei 16 sizej 8 _out -1
i 11 j 13 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1c6b270
i 11 j 13 sizei 16 sizej 16 _out 31
i 11 j 13 sizei 16 sizej 32 _out 24
i 11 j 13 sizei 32 sizej 16 _out 31
i 11 j 13 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 3 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
Current pList size 23, grow
Current pList size 585, eliminate equvalents
Current pList size 114, check correct
Current pList size 114, grow
Current pList size 16446, eliminate equvalents
Current pList size 839, check correct
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
Start search condition, Complete, program found ((! (sizei < sizej) ) && ((i + i) < sizej))
succeed

Start search node 0x1c66f60
i 11 j 13 sizei 16 sizej 16 _out 31
i 11 j 13 sizei 16 sizej 32 _out 24
i 11 j 13 sizei 32 sizej 16 _out 31
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 149, check correct
Current pList size 149, grow
Current pList size 22499, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
SynProg: (sizei < sizej)
SynProg: (sizei < sizej)
Start search condition, Complete, program found (sizei < sizej)
succeed

Start search node 0x1c6b450
i 11 j 13 sizei 16 sizej 32 _out 24
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
SynProg: (i + j)
SynProg: (i + j)
Complete, program found (i + j)

Start search node 0x1c6b360
i 11 j 13 sizei 16 sizej 16 _out 31
i 11 j 13 sizei 32 sizej 16 _out 31
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 129, check correct
Current pList size 129, grow
Current pList size 16899, eliminate equvalents
Current pList size 5571, check correct
SynProg: (i + (i + 9))
SynProg: (i + (i + 9))
Complete, program found (i + (i + 9))

Start search node 0x1c66ba0
i 11 j 13 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 107, check correct
Current pList size 107, grow
Current pList size 11663, eliminate equvalents
Current pList size 2348, check correct
SynProg: (6 + (i * i))
SynProg: (6 + (i * i))
Complete, program found (6 + (i * i))
--------------------------------------, dump tree after search
i 11 j 13 sizei 8 sizej 8 _out 1
i 11 j 13 sizei 8 sizej 16 _out 1
i 11 j 13 sizei 8 sizej 32 _out 1
i 11 j 13 sizei 16 sizej 8 _out 1
i 11 j 13 sizei 16 sizej 16 _out 0
i 11 j 13 sizei 16 sizej 32 _out 0
i 11 j 13 sizei 32 sizej 8 _out 1
i 11 j 13 sizei 32 sizej 16 _out 0
i 11 j 13 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (i < sizej)) then -1 else (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then (if (sizei < sizej) then (i + j) else (i + (i + 9))) else (6 + (i * i))))
L---i 11 j 13 sizei 8 sizej 8 _out -1
L---i 11 j 13 sizei 8 sizej 16 _out -1
L---i 11 j 13 sizei 8 sizej 32 _out -1
L---i 11 j 13 sizei 16 sizej 8 _out -1
L---i 11 j 13 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 11 j 13 sizei 16 sizej 16 _out 1
R---i 11 j 13 sizei 16 sizej 32 _out 1
R---i 11 j 13 sizei 32 sizej 16 _out 1
R---i 11 j 13 sizei 32 sizej 32 _out 0
Searched Program: (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then (if (sizei < sizej) then (i + j) else (i + (i + 9))) else (6 + (i * i)))
R---L---i 11 j 13 sizei 16 sizej 16 _out 0
R---L---i 11 j 13 sizei 16 sizej 32 _out 1
R---L---i 11 j 13 sizei 32 sizej 16 _out 0
Searched Program: (if (sizei < sizej) then (i + j) else (i + (i + 9)))
R---L---L---i 11 j 13 sizei 16 sizej 32 _out 24
Searched Program: (i + j)
R---L---R---i 11 j 13 sizei 16 sizej 16 _out 31
R---L---R---i 11 j 13 sizei 32 sizej 16 _out 31
Searched Program: (i + (i + 9))
R---R---i 11 j 13 sizei 32 sizej 32 _out 127
Searched Program: (6 + (i * i))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (i < sizej)) then -1 else (if ((! (sizei < sizej) ) && ((i + i) < sizej)) then (if (sizei < sizej) then (i + j) else (i + (i + 9))) else (6 + (i * i))))
--------------------------------------
