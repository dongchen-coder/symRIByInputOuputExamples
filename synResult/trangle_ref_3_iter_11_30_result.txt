Input output examples:
    i 11 j 30 sizei 8 sizej 8    _out -1
    i 11 j 30 sizei 8 sizej 16    _out -1
    i 11 j 30 sizei 8 sizej 32    _out -1
    i 11 j 30 sizei 16 sizej 8    _out -1
    i 11 j 30 sizei 16 sizej 16    _out -1
    i 11 j 30 sizei 16 sizej 32    _out 103
    i 11 j 30 sizei 32 sizej 8    _out -1
    i 11 j 30 sizei 32 sizej 16    _out -1
    i 11 j 30 sizei 32 sizej 32    _out 127
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x12424a0
i 11 j 30 sizei 8 sizej 8 _out -1
i 11 j 30 sizei 8 sizej 16 _out -1
i 11 j 30 sizei 8 sizej 32 _out -1
i 11 j 30 sizei 16 sizej 8 _out -1
i 11 j 30 sizei 16 sizej 16 _out -1
i 11 j 30 sizei 16 sizej 32 _out 103
i 11 j 30 sizei 32 sizej 8 _out -1
i 11 j 30 sizei 32 sizej 16 _out -1
i 11 j 30 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 153, check correct
Current pList size 153, grow
Current pList size 23715, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 7 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 32, check correct
Current pList size 32, grow
Current pList size 721, eliminate equvalents
Current pList size 176, check correct
SynProg: ((i < sizei) && (j < sizej))
SynProg: ((i < sizei) && (j < sizej))
Start search condition, Complete, program found ((i < sizei) && (j < sizej))
succeed

Start search node 0x12419b0
i 11 j 30 sizei 8 sizej 8 _out -1
i 11 j 30 sizei 8 sizej 16 _out -1
i 11 j 30 sizei 8 sizej 32 _out -1
i 11 j 30 sizei 16 sizej 8 _out -1
i 11 j 30 sizei 16 sizej 16 _out -1
i 11 j 30 sizei 32 sizej 8 _out -1
i 11 j 30 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1241cd0
i 11 j 30 sizei 16 sizej 32 _out 103
i 11 j 30 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 138, check correct
Current pList size 138, grow
Current pList size 19320, eliminate equvalents
Current pList size 6955, check correct
Current pList size 6955, grow
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Start search condition, Complete, program found (j < sizei)
succeed

Start search node 0x123dc90
i 11 j 30 sizei 16 sizej 32 _out 103
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 114, check correct
Current pList size 114, grow
Current pList size 13224, eliminate equvalents
Current pList size 2675, check correct
SynProg: (3 + (10 * 10))
SynProg: (3 + (10 * 10))
Complete, program found (3 + (10 * 10))

Start search node 0x123dab0
i 11 j 30 sizei 32 sizej 32 _out 127
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 107, check correct
Current pList size 107, grow
Current pList size 11663, eliminate equvalents
Current pList size 2485, check correct
SynProg: (6 + (i * i))
SynProg: (6 + (i * i))
Complete, program found (6 + (i * i))
--------------------------------------, dump tree after search
i 11 j 30 sizei 8 sizej 8 _out 1
i 11 j 30 sizei 8 sizej 16 _out 1
i 11 j 30 sizei 8 sizej 32 _out 1
i 11 j 30 sizei 16 sizej 8 _out 1
i 11 j 30 sizei 16 sizej 16 _out 1
i 11 j 30 sizei 16 sizej 32 _out 0
i 11 j 30 sizei 32 sizej 8 _out 1
i 11 j 30 sizei 32 sizej 16 _out 1
i 11 j 30 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (j < sizej)) then -1 else (if (j < sizei) then (3 + (10 * 10)) else (6 + (i * i))))
L---i 11 j 30 sizei 8 sizej 8 _out -1
L---i 11 j 30 sizei 8 sizej 16 _out -1
L---i 11 j 30 sizei 8 sizej 32 _out -1
L---i 11 j 30 sizei 16 sizej 8 _out -1
L---i 11 j 30 sizei 16 sizej 16 _out -1
L---i 11 j 30 sizei 32 sizej 8 _out -1
L---i 11 j 30 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 11 j 30 sizei 16 sizej 32 _out 1
R---i 11 j 30 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizei) then (3 + (10 * 10)) else (6 + (i * i)))
R---L---i 11 j 30 sizei 16 sizej 32 _out 103
Searched Program: (3 + (10 * 10))
R---R---i 11 j 30 sizei 32 sizej 32 _out 127
Searched Program: (6 + (i * i))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (j < sizej)) then -1 else (if (j < sizei) then (3 + (10 * 10)) else (6 + (i * i))))
--------------------------------------
