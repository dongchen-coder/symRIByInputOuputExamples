Input output examples:
    i 10 j 16 sizei 8 sizej 8    _out -1
    i 10 j 16 sizei 8 sizej 16    _out -1
    i 10 j 16 sizei 8 sizej 32    _out -1
    i 10 j 16 sizei 16 sizej 8    _out -1
    i 10 j 16 sizei 16 sizej 16    _out 45
    i 10 j 16 sizei 16 sizej 32    _out 133
    i 10 j 16 sizei 32 sizej 8    _out -1
    i 10 j 16 sizei 32 sizej 16    _out 45
    i 10 j 16 sizei 32 sizej 32    _out 133
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x1bf14a0
i 10 j 16 sizei 8 sizej 8 _out -1
i 10 j 16 sizei 8 sizej 16 _out -1
i 10 j 16 sizei 8 sizej 32 _out -1
i 10 j 16 sizei 16 sizej 8 _out -1
i 10 j 16 sizei 16 sizej 16 _out 45
i 10 j 16 sizei 16 sizej 32 _out 133
i 10 j 16 sizei 32 sizej 8 _out -1
i 10 j 16 sizei 32 sizej 16 _out 45
i 10 j 16 sizei 32 sizej 32 _out 133
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 30, check correct
Current pList size 30, grow
Current pList size 696, eliminate equvalents
Current pList size 156, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Start search condition, Complete, program found ((i < sizei) && (i < sizej))
succeed

Start search node 0x1bf0eb0
i 10 j 16 sizei 8 sizej 8 _out -1
i 10 j 16 sizei 8 sizej 16 _out -1
i 10 j 16 sizei 8 sizej 32 _out -1
i 10 j 16 sizei 16 sizej 8 _out -1
i 10 j 16 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1bf1270
i 10 j 16 sizei 16 sizej 16 _out 45
i 10 j 16 sizei 16 sizej 32 _out 133
i 10 j 16 sizei 32 sizej 16 _out 45
i 10 j 16 sizei 32 sizej 32 _out 133
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 26, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x1bec330
i 10 j 16 sizei 16 sizej 16 _out 45
i 10 j 16 sizei 32 sizej 16 _out 45
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
SynProg: (5 * 9)
SynProg: (5 * 9)
Complete, program found (5 * 9)

Start search node 0x1bf08c0
i 10 j 16 sizei 16 sizej 32 _out 133
i 10 j 16 sizei 32 sizej 32 _out 133
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 130, check correct
Current pList size 130, grow
Current pList size 17160, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
Current pList size 23, grow
Current pList size 585, eliminate equvalents
Current pList size 96, check correct
Current pList size 96, grow
Current pList size 12849, eliminate equvalents
Current pList size 436, check correct
Current pList size 436, grow
Current pList size 280599, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Current node size 2 Split to two: left size 2 right size 0
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
Current pList size 23, grow
Current pList size 585, eliminate equvalents
Current pList size 96, check correct
Current pList size 96, grow
Current pList size 12849, eliminate equvalents
Current pList size 436, check correct
Current pList size 436, grow
Current pList size 280599, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 26, check correct
Current pList size 26, grow
Current pList size 658, eliminate equvalents
Current pList size 129, check correct
Current pList size 129, grow
Current pList size 20800, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 30, check correct
Current pList size 30, grow
Current pList size 696, eliminate equvalents
Current pList size 156, check correct
Current pList size 156, grow
Current pList size 21529, eliminate equvalents
Start search condition, Time out for bottem up search
faild
--------------------------------------, dump tree after search
i 10 j 16 sizei 8 sizej 8 _out -1
i 10 j 16 sizei 8 sizej 16 _out -1
i 10 j 16 sizei 8 sizej 32 _out -1
i 10 j 16 sizei 16 sizej 8 _out -1
i 10 j 16 sizei 32 sizej 8 _out -1
i 10 j 16 sizei 16 sizej 16 _out 45
i 10 j 16 sizei 32 sizej 16 _out 45
i 10 j 16 sizei 16 sizej 32 _out 133
i 10 j 16 sizei 32 sizej 32 _out 133
Searched Program: 
--------------------------------------
--------------------------------------, dump search result start
Not yet founded, (T^T)
--------------------------------------
