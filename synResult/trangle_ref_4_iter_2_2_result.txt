Input output examples:
    i 2 j 2 sizei 8 sizej 8    _out 0
    i 2 j 2 sizei 8 sizej 16    _out 30
    i 2 j 2 sizei 8 sizej 32    _out 7
    i 2 j 2 sizei 16 sizej 8    _out 0
    i 2 j 2 sizei 16 sizej 16    _out 0
    i 2 j 2 sizei 16 sizej 32    _out 78
    i 2 j 2 sizei 32 sizej 8    _out 0
    i 2 j 2 sizei 32 sizej 16    _out 0
    i 2 j 2 sizei 32 sizej 32    _out 0
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x245e4a0
i 2 j 2 sizei 8 sizej 8 _out 0
i 2 j 2 sizei 8 sizej 16 _out 30
i 2 j 2 sizei 8 sizej 32 _out 7
i 2 j 2 sizei 16 sizej 8 _out 0
i 2 j 2 sizei 16 sizej 16 _out 0
i 2 j 2 sizei 16 sizej 32 _out 78
i 2 j 2 sizei 32 sizej 8 _out 0
i 2 j 2 sizei 32 sizej 16 _out 0
i 2 j 2 sizei 32 sizej 32 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 6 right size 3
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 13, check correct
SynProg: (sizei < sizej)
SynProg: (sizei < sizej)
Complete, program found (sizei < sizej)

Start search node 0x245ddc0
i 2 j 2 sizei 8 sizej 8 _out 0
i 2 j 2 sizei 16 sizej 8 _out 0
i 2 j 2 sizei 16 sizej 16 _out 0
i 2 j 2 sizei 32 sizej 8 _out 0
i 2 j 2 sizei 32 sizej 16 _out 0
i 2 j 2 sizei 32 sizej 32 _out 0
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
SynProg: (1 + -1)
SynProg: (1 + -1)
Complete, program found (1 + -1)

Start search node 0x245e090
i 2 j 2 sizei 8 sizej 16 _out 30
i 2 j 2 sizei 8 sizej 32 _out 7
i 2 j 2 sizei 16 sizej 32 _out 78
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 11, check correct
Current pList size 11, grow
Current pList size 141, eliminate equvalents
Current pList size 37, check correct
SynProg: ((sizei + sizei) < sizej)
SynProg: ((sizei + sizei) < sizej)
Complete, program found ((sizei + sizei) < sizej)

Start search node 0x2459a10
i 2 j 2 sizei 8 sizej 32 _out 7
Searched Program: 
Init pList size 17, check correct
SynProg: 7
SynProg: 7
Complete, program found 7

Start search node 0x245b060
i 2 j 2 sizei 8 sizej 16 _out 30
i 2 j 2 sizei 16 sizej 32 _out 78
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 125, check correct
Current pList size 125, grow
Current pList size 15875, eliminate equvalents
Time out for bottem up search
Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 10, check correct
Current pList size 10, grow
Current pList size 114, eliminate equvalents
Current pList size 26, check correct
Current pList size 26, grow
Current pList size 906, eliminate equvalents
Current pList size 83, check correct
SynProg: (((i + i) + (i + i)) < sizei)
SynProg: (((i + i) + (i + i)) < sizei)
Complete, program found (((i + i) + (i + i)) < sizei)

Start search node 0x2459ce0
i 2 j 2 sizei 8 sizej 16 _out 30
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 84, check correct
SynProg: (3 * 10)
SynProg: (3 * 10)
Complete, program found (3 * 10)

Start search node 0x245b4c0
i 2 j 2 sizei 16 sizej 32 _out 78
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
Current pList size 99, grow
Current pList size 9999, eliminate equvalents
Current pList size 2045, check correct
SynProg: (1 + (7 * 11))
SynProg: (1 + (7 * 11))
Complete, program found (1 + (7 * 11))
--------------------------------------, dump tree after search
i 2 j 2 sizei 8 sizej 8 _out 1
i 2 j 2 sizei 8 sizej 16 _out 0
i 2 j 2 sizei 8 sizej 32 _out 0
i 2 j 2 sizei 16 sizej 8 _out 1
i 2 j 2 sizei 16 sizej 16 _out 1
i 2 j 2 sizei 16 sizej 32 _out 0
i 2 j 2 sizei 32 sizej 8 _out 1
i 2 j 2 sizei 32 sizej 16 _out 1
i 2 j 2 sizei 32 sizej 32 _out 1
Searched Program: (if (sizei < sizej) then (1 + -1) else (if ((sizei + sizei) < sizej) then 7 else (if (((i + i) + (i + i)) < sizei) then (3 * 10) else (1 + (7 * 11)))))
L---i 2 j 2 sizei 8 sizej 8 _out 0
L---i 2 j 2 sizei 16 sizej 8 _out 0
L---i 2 j 2 sizei 16 sizej 16 _out 0
L---i 2 j 2 sizei 32 sizej 8 _out 0
L---i 2 j 2 sizei 32 sizej 16 _out 0
L---i 2 j 2 sizei 32 sizej 32 _out 0
Searched Program: (1 + -1)
R---i 2 j 2 sizei 8 sizej 16 _out 0
R---i 2 j 2 sizei 8 sizej 32 _out 1
R---i 2 j 2 sizei 16 sizej 32 _out 0
Searched Program: (if ((sizei + sizei) < sizej) then 7 else (if (((i + i) + (i + i)) < sizei) then (3 * 10) else (1 + (7 * 11))))
R---L---i 2 j 2 sizei 8 sizej 32 _out 7
Searched Program: 7
R---R---i 2 j 2 sizei 8 sizej 16 _out 1
R---R---i 2 j 2 sizei 16 sizej 32 _out 0
Searched Program: (if (((i + i) + (i + i)) < sizei) then (3 * 10) else (1 + (7 * 11)))
R---R---L---i 2 j 2 sizei 8 sizej 16 _out 30
Searched Program: (3 * 10)
R---R---R---i 2 j 2 sizei 16 sizej 32 _out 78
Searched Program: (1 + (7 * 11))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (sizei < sizej) then (1 + -1) else (if ((sizei + sizei) < sizej) then 7 else (if (((i + i) + (i + i)) < sizei) then (3 * 10) else (1 + (7 * 11)))))
--------------------------------------
