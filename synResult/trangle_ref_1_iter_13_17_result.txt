Input output examples:
    i 13 j 17 sizei 8 sizej 8    _out -1
    i 13 j 17 sizei 8 sizej 16    _out -1
    i 13 j 17 sizei 8 sizej 32    _out -1
    i 13 j 17 sizei 16 sizej 8    _out -1
    i 13 j 17 sizei 16 sizej 16    _out -1
    i 13 j 17 sizei 16 sizej 32    _out 111
    i 13 j 17 sizei 32 sizej 8    _out -1
    i 13 j 17 sizei 32 sizej 16    _out -1
    i 13 j 17 sizei 32 sizej 32    _out 111
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x131a4a0
i 13 j 17 sizei 8 sizej 8 _out -1
i 13 j 17 sizei 8 sizej 16 _out -1
i 13 j 17 sizei 8 sizej 32 _out -1
i 13 j 17 sizei 16 sizej 8 _out -1
i 13 j 17 sizei 16 sizej 16 _out -1
i 13 j 17 sizei 16 sizej 32 _out 111
i 13 j 17 sizei 32 sizej 8 _out -1
i 13 j 17 sizei 32 sizej 16 _out -1
i 13 j 17 sizei 32 sizej 32 _out 111
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 168, check correct
Current pList size 168, grow
Current pList size 28560, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 7 right size 2
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 26, check correct
Current pList size 26, grow
Current pList size 406, eliminate equvalents
Current pList size 121, check correct
SynProg: ((i < sizei) && (j < sizej))
SynProg: ((i < sizei) && (j < sizej))
Complete, program found ((i < sizei) && (j < sizej))

Start search node 0x13199b0
i 13 j 17 sizei 8 sizej 8 _out -1
i 13 j 17 sizei 8 sizej 16 _out -1
i 13 j 17 sizei 8 sizej 32 _out -1
i 13 j 17 sizei 16 sizej 8 _out -1
i 13 j 17 sizei 16 sizej 16 _out -1
i 13 j 17 sizei 32 sizej 8 _out -1
i 13 j 17 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1319cd0
i 13 j 17 sizei 16 sizej 32 _out 111
i 13 j 17 sizei 32 sizej 32 _out 111
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 155, check correct
Current pList size 155, grow
Current pList size 24335, eliminate equvalents
Time out for bottem up search
Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
Current pList size 18, grow
Current pList size 330, eliminate equvalents
Current pList size 72, check correct
Current pList size 72, grow
Current pList size 7053, eliminate equvalents
Current pList size 428, check correct
SynProg: (i + ((j + j) + (sizej + sizej)))
SynProg: (i + ((j + j) + (sizej + sizej)))
Complete, program found (i + ((j + j) + (sizej + sizej)))

Start search node 0x1315c90
i 13 j 17 sizei 16 sizej 32 _out 111
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 128, check correct
Current pList size 128, grow
Current pList size 16640, eliminate equvalents
Current pList size 3092, check correct
SynProg: (1 + (10 * 11))
SynProg: (1 + (10 * 11))
Complete, program found (1 + (10 * 11))

Start search node 0x1315ab0
i 13 j 17 sizei 32 sizej 32 _out 111
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 122, check correct
Current pList size 122, grow
Current pList size 15128, eliminate equvalents
Current pList size 2984, check correct
SynProg: (1 + (10 * 11))
SynProg: (1 + (10 * 11))
Complete, program found (1 + (10 * 11))
--------------------------------------, dump tree after search
i 13 j 17 sizei 8 sizej 8 _out 1
i 13 j 17 sizei 8 sizej 16 _out 1
i 13 j 17 sizei 8 sizej 32 _out 1
i 13 j 17 sizei 16 sizej 8 _out 1
i 13 j 17 sizei 16 sizej 16 _out 1
i 13 j 17 sizei 16 sizej 32 _out 0
i 13 j 17 sizei 32 sizej 8 _out 1
i 13 j 17 sizei 32 sizej 16 _out 1
i 13 j 17 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (j < sizej)) then -1 else (if (i + ((j + j) + (sizej + sizej))) then (1 + (10 * 11)) else (1 + (10 * 11))))
L---i 13 j 17 sizei 8 sizej 8 _out -1
L---i 13 j 17 sizei 8 sizej 16 _out -1
L---i 13 j 17 sizei 8 sizej 32 _out -1
L---i 13 j 17 sizei 16 sizej 8 _out -1
L---i 13 j 17 sizei 16 sizej 16 _out -1
L---i 13 j 17 sizei 32 sizej 8 _out -1
L---i 13 j 17 sizei 32 sizej 16 _out -1
Searched Program: -1
R---i 13 j 17 sizei 16 sizej 32 _out 111
R---i 13 j 17 sizei 32 sizej 32 _out 111
Searched Program: (if (i + ((j + j) + (sizej + sizej))) then (1 + (10 * 11)) else (1 + (10 * 11)))
R---L---i 13 j 17 sizei 16 sizej 32 _out 111
Searched Program: (1 + (10 * 11))
R---R---i 13 j 17 sizei 32 sizej 32 _out 111
Searched Program: (1 + (10 * 11))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (j < sizej)) then -1 else (if (i + ((j + j) + (sizej + sizej))) then (1 + (10 * 11)) else (1 + (10 * 11))))
--------------------------------------
