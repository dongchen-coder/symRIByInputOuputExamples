Input output examples:
    i 2 j 5 sizei 8 sizej 8    _out 0
    i 2 j 5 sizei 8 sizej 16    _out 30
    i 2 j 5 sizei 8 sizej 32    _out 126
    i 2 j 5 sizei 16 sizej 8    _out 0
    i 2 j 5 sizei 16 sizej 16    _out 0
    i 2 j 5 sizei 16 sizej 32    _out 78
    i 2 j 5 sizei 32 sizej 8    _out 0
    i 2 j 5 sizei 32 sizej 16    _out 0
    i 2 j 5 sizei 32 sizej 32    _out 0
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 4
        intOps: VAR NUM PLUS ITE 
        boolOps: F AND NOT LT 
        constants: 5 -1 
        vars: i j sizei sizej 
--------------------------------------, search start
Init pList size 6, check correct
Current pList size 6, grow
Current pList size 79, eliminate equvalents
Current pList size 79, check correct
Current pList size 79, grow
Current pList size 70282, eliminate equvalents
Time out for bottem up search
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 37, eliminate equvalents
Current pList size 37, check correct
SynProg: (sizei < sizej)
SynProg: (sizei < sizej)
Complete, program found (sizei < sizej)
Init pList size 6, check correct
Current pList size 6, grow
Current pList size 79, eliminate equvalents
Current pList size 79, check correct
SynProg: false
SynProg: false
Complete, program found false
Init pList size 6, check correct
Current pList size 6, grow
Current pList size 79, eliminate equvalents
Current pList size 79, check correct
Current pList size 79, grow
Current pList size 70282, eliminate equvalents
Time out for bottem up search
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 37, eliminate equvalents
Current pList size 37, check correct
Current pList size 37, grow
Current pList size 1144, eliminate equvalents
Current pList size 1144, check correct
Current pList size 1144, grow
Time out for bottem up search
i 2 j 5 sizei 8 sizej 8 _out 1
i 2 j 5 sizei 8 sizej 16 _out 0
i 2 j 5 sizei 8 sizej 32 _out 0
i 2 j 5 sizei 16 sizej 8 _out 1
i 2 j 5 sizei 16 sizej 16 _out 1
i 2 j 5 sizei 16 sizej 32 _out 0
i 2 j 5 sizei 32 sizej 8 _out 1
i 2 j 5 sizei 32 sizej 16 _out 1
i 2 j 5 sizei 32 sizej 32 _out 1
Searched Program: (if (sizei < sizej) then false else )
L---i 2 j 5 sizei 8 sizej 8 _out 0
L---i 2 j 5 sizei 16 sizej 8 _out 0
L---i 2 j 5 sizei 16 sizej 16 _out 0
L---i 2 j 5 sizei 32 sizej 8 _out 0
L---i 2 j 5 sizei 32 sizej 16 _out 0
L---i 2 j 5 sizei 32 sizej 32 _out 0
Searched Program: false
R---i 2 j 5 sizei 8 sizej 16 _out 1
R---i 2 j 5 sizei 8 sizej 32 _out 0
R---i 2 j 5 sizei 16 sizej 32 _out 0
Searched Program: 
R---L---i 2 j 5 sizei 8 sizej 16 _out 30
Searched Program: 
R---R---i 2 j 5 sizei 8 sizej 32 _out 126
R---R---i 2 j 5 sizei 16 sizej 32 _out 78
Searched Program: 
--------------------------------------, dump search result start
Searched Program (^0^) : (if (sizei < sizej) then false else )
--------------------------------------
