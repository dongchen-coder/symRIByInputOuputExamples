Input output examples:
    i 16 j 16 sizei 8 sizej 8    _out -1
    i 16 j 16 sizei 8 sizej 16    _out -1
    i 16 j 16 sizei 8 sizej 32    _out -1
    i 16 j 16 sizei 16 sizej 8    _out -1
    i 16 j 16 sizei 16 sizej 16    _out 9
    i 16 j 16 sizei 16 sizej 32    _out 97
    i 16 j 16 sizei 32 sizej 8    _out -1
    i 16 j 16 sizei 32 sizej 16    _out 9
    i 16 j 16 sizei 32 sizej 32    _out 97
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x24d04a0
i 16 j 16 sizei 8 sizej 8 _out -1
i 16 j 16 sizei 8 sizej 16 _out -1
i 16 j 16 sizei 8 sizej 32 _out -1
i 16 j 16 sizei 16 sizej 8 _out -1
i 16 j 16 sizei 16 sizej 16 _out 9
i 16 j 16 sizei 16 sizej 32 _out 97
i 16 j 16 sizei 32 sizej 8 _out -1
i 16 j 16 sizei 32 sizej 16 _out 9
i 16 j 16 sizei 32 sizej 32 _out 97
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 360, eliminate equvalents
Current pList size 100, check correct
Current pList size 100, grow
Current pList size 7773, eliminate equvalents
Current pList size 575, check correct
SynProg: ((! (sizei < i) ) && (! (sizej < i) ))
SynProg: ((! (sizei < i) ) && (! (sizej < i) ))
Start search condition, Complete, program found ((! (sizei < i) ) && (! (sizej < i) ))
succeed

Start search node 0x24cfeb0
i 16 j 16 sizei 8 sizej 8 _out -1
i 16 j 16 sizei 8 sizej 16 _out -1
i 16 j 16 sizei 8 sizej 32 _out -1
i 16 j 16 sizei 16 sizej 8 _out -1
i 16 j 16 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x24d0270
i 16 j 16 sizei 16 sizej 16 _out 9
i 16 j 16 sizei 16 sizej 32 _out 97
i 16 j 16 sizei 32 sizej 16 _out 9
i 16 j 16 sizei 32 sizej 32 _out 97
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 20, check correct
SynProg: (i < sizej)
SynProg: (i < sizej)
Start search condition, Complete, program found (i < sizej)
succeed

Start search node 0x24cb330
i 16 j 16 sizei 16 sizej 16 _out 9
i 16 j 16 sizei 32 sizej 16 _out 9
Searched Program: 
Init pList size 17, check correct
SynProg: 9
SynProg: 9
Complete, program found 9

Start search node 0x24cf8c0
i 16 j 16 sizei 16 sizej 32 _out 97
i 16 j 16 sizei 32 sizej 32 _out 97
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 130, check correct
Current pList size 130, grow
Current pList size 17160, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 17, check correct
Current pList size 17, grow
Current pList size 288, eliminate equvalents
Current pList size 58, check correct
Current pList size 58, grow
Current pList size 4470, eliminate equvalents
Current pList size 287, check correct
Current pList size 287, grow
Current pList size 120573, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Current node size 2 Split to two: left size 2 right size 0
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 17, check correct
Current pList size 17, grow
Current pList size 288, eliminate equvalents
Current pList size 58, check correct
Current pList size 58, grow
Current pList size 4470, eliminate equvalents
Current pList size 287, check correct
Current pList size 287, grow
Current pList size 120573, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 20, check correct
Current pList size 20, grow
Current pList size 343, eliminate equvalents
Current pList size 81, check correct
Current pList size 81, grow
Current pList size 7336, eliminate equvalents
Current pList size 508, check correct
Current pList size 508, grow
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 360, eliminate equvalents
Current pList size 100, check correct
Current pList size 100, grow
Current pList size 7773, eliminate equvalents
Current pList size 575, check correct
Current pList size 575, grow
Start search condition, Time out for bottem up search
faild
--------------------------------------, dump tree after search
i 16 j 16 sizei 8 sizej 8 _out -1
i 16 j 16 sizei 8 sizej 16 _out -1
i 16 j 16 sizei 8 sizej 32 _out -1
i 16 j 16 sizei 16 sizej 8 _out -1
i 16 j 16 sizei 32 sizej 8 _out -1
i 16 j 16 sizei 16 sizej 16 _out 9
i 16 j 16 sizei 32 sizej 16 _out 9
i 16 j 16 sizei 16 sizej 32 _out 97
i 16 j 16 sizei 32 sizej 32 _out 97
Searched Program: 
--------------------------------------
--------------------------------------, dump search result start
Not yet founded, (T^T)
--------------------------------------
