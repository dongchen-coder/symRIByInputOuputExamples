Input output examples:
    i 3 j 12 sizei 8 sizej 8    _out -1
    i 3 j 12 sizei 8 sizej 16    _out 51
    i 3 j 12 sizei 8 sizej 32    _out 51
    i 3 j 12 sizei 16 sizej 8    _out -1
    i 3 j 12 sizei 16 sizej 16    _out 75
    i 3 j 12 sizei 16 sizej 32    _out 59
    i 3 j 12 sizei 32 sizej 8    _out -1
    i 3 j 12 sizei 32 sizej 16    _out 75
    i 3 j 12 sizei 32 sizej 32    _out 171
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x245c4a0
i 3 j 12 sizei 8 sizej 8 _out -1
i 3 j 12 sizei 8 sizej 16 _out 51
i 3 j 12 sizei 8 sizej 32 _out 51
i 3 j 12 sizei 16 sizej 8 _out -1
i 3 j 12 sizei 16 sizej 16 _out 75
i 3 j 12 sizei 16 sizej 32 _out 59
i 3 j 12 sizei 32 sizej 8 _out -1
i 3 j 12 sizei 32 sizej 16 _out 75
i 3 j 12 sizei 32 sizej 32 _out 171
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 3 right size 6
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 22, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Complete, program found (j < sizej)

Start search node 0x245c3b0
i 3 j 12 sizei 8 sizej 8 _out -1
i 3 j 12 sizei 16 sizej 8 _out -1
i 3 j 12 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x245d900
i 3 j 12 sizei 8 sizej 16 _out 51
i 3 j 12 sizei 8 sizej 32 _out 51
i 3 j 12 sizei 16 sizej 16 _out 75
i 3 j 12 sizei 16 sizej 32 _out 59
i 3 j 12 sizei 32 sizej 16 _out 75
i 3 j 12 sizei 32 sizej 32 _out 171
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Current node size 6 Split to two: left size 3 right size 3
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 20, check correct
SynProg: (sizei < sizej)
SynProg: (sizei < sizej)
Complete, program found (sizei < sizej)

Start search node 0x24576a0
i 3 j 12 sizei 8 sizej 16 _out 51
i 3 j 12 sizei 8 sizej 32 _out 51
i 3 j 12 sizei 16 sizej 32 _out 59
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Current node size 3 Split to two: left size 2 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Complete, program found (j < sizei)

Start search node 0x2459060
i 3 j 12 sizei 8 sizej 16 _out 51
i 3 j 12 sizei 8 sizej 32 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 103, check correct
Current pList size 103, grow
Current pList size 10815, eliminate equvalents
Time out for bottem up search
Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 16, check correct
Current pList size 16, grow
Current pList size 321, eliminate equvalents
Current pList size 67, check correct
Current pList size 67, grow
Current pList size 6063, eliminate equvalents
Current pList size 307, check correct
SynProg: (i + ((j + j) + (j + j)))
SynProg: (i + ((j + j) + (j + j)))
Complete, program found (i + ((j + j) + (j + j)))

Start search node 0x24578d0
i 3 j 12 sizei 8 sizej 16 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 84, check correct
Current pList size 84, grow
Current pList size 7224, eliminate equvalents
Current pList size 1275, check correct
SynProg: (i + (i * sizej))
SynProg: (i + (i * sizej))
Complete, program found (i + (i * sizej))

Start search node 0x245b8c0
i 3 j 12 sizei 8 sizej 32 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 94, check correct
Current pList size 94, grow
Current pList size 9024, eliminate equvalents
Current pList size 1935, check correct
SynProg: (i + (j * 4))
SynProg: (i + (j * 4))
Complete, program found (i + (j * 4))

Start search node 0x2457b00
i 3 j 12 sizei 16 sizej 32 _out 59
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
Current pList size 99, grow
Current pList size 9999, eliminate equvalents
Current pList size 2045, check correct
SynProg: (i + (7 * 8))
SynProg: (i + (7 * 8))
Complete, program found (i + (7 * 8))

Start search node 0x2457830
i 3 j 12 sizei 16 sizej 16 _out 75
i 3 j 12 sizei 32 sizej 16 _out 75
i 3 j 12 sizei 32 sizej 32 _out 171
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 132, check correct
Current pList size 132, grow
Current pList size 17688, eliminate equvalents
Time out for bottem up search
Current node size 3 Split to two: left size 2 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 17, check correct
Current pList size 17, grow
Current pList size 325, eliminate equvalents
Current pList size 76, check correct
SynProg: (sizej < (j + j))
SynProg: (sizej < (j + j))
Complete, program found (sizej < (j + j))

Start search node 0x245eac0
i 3 j 12 sizei 16 sizej 16 _out 75
i 3 j 12 sizei 32 sizej 16 _out 75
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
Current pList size 113, grow
Current pList size 12995, eliminate equvalents
Time out for bottem up search
Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 17, check correct
Current pList size 17, grow
Current pList size 325, eliminate equvalents
Current pList size 71, check correct
Current pList size 71, grow
Current pList size 6849, eliminate equvalents
Current pList size 359, check correct
SynProg: ((i + j) + ((j + sizej) + (sizej + sizej)))
SynProg: ((i + j) + ((j + sizej) + (sizej + sizej)))
Complete, program found ((i + j) + ((j + sizej) + (sizej + sizej)))

Start search node 0x2457d80
i 3 j 12 sizei 16 sizej 16 _out 75
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 84, check correct
Current pList size 84, grow
Current pList size 7224, eliminate equvalents
Current pList size 1275, check correct
SynProg: (i + (j * 6))
SynProg: (i + (j * 6))
Complete, program found (i + (j * 6))

Start search node 0x245efc0
i 3 j 12 sizei 32 sizej 16 _out 75
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
Current pList size 99, grow
Current pList size 9999, eliminate equvalents
Current pList size 2045, check correct
SynProg: (i + (j * 6))
SynProg: (i + (j * 6))
Complete, program found (i + (j * 6))

Start search node 0x245e7f0
i 3 j 12 sizei 32 sizej 32 _out 171
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 94, check correct
Current pList size 94, grow
Current pList size 9024, eliminate equvalents
Current pList size 1935, check correct
SynProg: (11 + (sizei * 5))
SynProg: (11 + (sizei * 5))
Complete, program found (11 + (sizei * 5))
--------------------------------------, dump tree after search
i 3 j 12 sizei 8 sizej 8 _out 1
i 3 j 12 sizei 8 sizej 16 _out 0
i 3 j 12 sizei 8 sizej 32 _out 0
i 3 j 12 sizei 16 sizej 8 _out 1
i 3 j 12 sizei 16 sizej 16 _out 0
i 3 j 12 sizei 16 sizej 32 _out 0
i 3 j 12 sizei 32 sizej 8 _out 1
i 3 j 12 sizei 32 sizej 16 _out 0
i 3 j 12 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then -1 else (if (sizei < sizej) then (if (j < sizei) then (if (i + ((j + j) + (j + j))) then (i + (i * sizej)) else (i + (j * 4))) else (i + (7 * 8))) else (if (sizej < (j + j)) then (if ((i + j) + ((j + sizej) + (sizej + sizej))) then (i + (j * 6)) else (i + (j * 6))) else (11 + (sizei * 5)))))
L---i 3 j 12 sizei 8 sizej 8 _out -1
L---i 3 j 12 sizei 16 sizej 8 _out -1
L---i 3 j 12 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 3 j 12 sizei 8 sizej 16 _out 1
R---i 3 j 12 sizei 8 sizej 32 _out 1
R---i 3 j 12 sizei 16 sizej 16 _out 0
R---i 3 j 12 sizei 16 sizej 32 _out 1
R---i 3 j 12 sizei 32 sizej 16 _out 0
R---i 3 j 12 sizei 32 sizej 32 _out 0
Searched Program: (if (sizei < sizej) then (if (j < sizei) then (if (i + ((j + j) + (j + j))) then (i + (i * sizej)) else (i + (j * 4))) else (i + (7 * 8))) else (if (sizej < (j + j)) then (if ((i + j) + ((j + sizej) + (sizej + sizej))) then (i + (j * 6)) else (i + (j * 6))) else (11 + (sizei * 5))))
R---L---i 3 j 12 sizei 8 sizej 16 _out 1
R---L---i 3 j 12 sizei 8 sizej 32 _out 1
R---L---i 3 j 12 sizei 16 sizej 32 _out 0
Searched Program: (if (j < sizei) then (if (i + ((j + j) + (j + j))) then (i + (i * sizej)) else (i + (j * 4))) else (i + (7 * 8)))
R---L---L---i 3 j 12 sizei 8 sizej 16 _out 51
R---L---L---i 3 j 12 sizei 8 sizej 32 _out 51
Searched Program: (if (i + ((j + j) + (j + j))) then (i + (i * sizej)) else (i + (j * 4)))
R---L---L---L---i 3 j 12 sizei 8 sizej 16 _out 51
Searched Program: (i + (i * sizej))
R---L---L---R---i 3 j 12 sizei 8 sizej 32 _out 51
Searched Program: (i + (j * 4))
R---L---R---i 3 j 12 sizei 16 sizej 32 _out 59
Searched Program: (i + (7 * 8))
R---R---i 3 j 12 sizei 16 sizej 16 _out 1
R---R---i 3 j 12 sizei 32 sizej 16 _out 1
R---R---i 3 j 12 sizei 32 sizej 32 _out 0
Searched Program: (if (sizej < (j + j)) then (if ((i + j) + ((j + sizej) + (sizej + sizej))) then (i + (j * 6)) else (i + (j * 6))) else (11 + (sizei * 5)))
R---R---L---i 3 j 12 sizei 16 sizej 16 _out 75
R---R---L---i 3 j 12 sizei 32 sizej 16 _out 75
Searched Program: (if ((i + j) + ((j + sizej) + (sizej + sizej))) then (i + (j * 6)) else (i + (j * 6)))
R---R---L---L---i 3 j 12 sizei 16 sizej 16 _out 75
Searched Program: (i + (j * 6))
R---R---L---R---i 3 j 12 sizei 32 sizej 16 _out 75
Searched Program: (i + (j * 6))
R---R---R---i 3 j 12 sizei 32 sizej 32 _out 171
Searched Program: (11 + (sizei * 5))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if (j < sizej) then -1 else (if (sizei < sizej) then (if (j < sizei) then (if (i + ((j + j) + (j + j))) then (i + (i * sizej)) else (i + (j * 4))) else (i + (7 * 8))) else (if (sizej < (j + j)) then (if ((i + j) + ((j + sizej) + (sizej + sizej))) then (i + (j * 6)) else (i + (j * 6))) else (11 + (sizei * 5)))))
--------------------------------------
