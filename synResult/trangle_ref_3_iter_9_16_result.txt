Input output examples:
    i 9 j 16 sizei 8 sizej 8    _out -1
    i 9 j 16 sizei 8 sizej 16    _out -1
    i 9 j 16 sizei 8 sizej 32    _out -1
    i 9 j 16 sizei 16 sizej 8    _out -1
    i 9 j 16 sizei 16 sizej 16    _out 51
    i 9 j 16 sizei 16 sizej 32    _out 139
    i 9 j 16 sizei 32 sizej 8    _out -1
    i 9 j 16 sizei 32 sizej 16    _out 51
    i 9 j 16 sizei 32 sizej 32    _out 139
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x1c804a0
i 9 j 16 sizei 8 sizej 8 _out -1
i 9 j 16 sizei 8 sizej 16 _out -1
i 9 j 16 sizei 8 sizej 32 _out -1
i 9 j 16 sizei 16 sizej 8 _out -1
i 9 j 16 sizei 16 sizej 16 _out 51
i 9 j 16 sizei 16 sizej 32 _out 139
i 9 j 16 sizei 32 sizej 8 _out -1
i 9 j 16 sizei 32 sizej 16 _out 51
i 9 j 16 sizei 32 sizej 32 _out 139
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 29, check correct
Current pList size 29, grow
Current pList size 636, eliminate equvalents
Current pList size 143, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Start search condition, Complete, program found ((i < sizei) && (i < sizej))
succeed

Start search node 0x1c7feb0
i 9 j 16 sizei 8 sizej 8 _out -1
i 9 j 16 sizei 8 sizej 16 _out -1
i 9 j 16 sizei 8 sizej 32 _out -1
i 9 j 16 sizei 16 sizej 8 _out -1
i 9 j 16 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1c80270
i 9 j 16 sizei 16 sizej 16 _out 51
i 9 j 16 sizei 16 sizej 32 _out 139
i 9 j 16 sizei 32 sizej 16 _out 51
i 9 j 16 sizei 32 sizej 32 _out 139
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 144, check correct
Current pList size 144, grow
Current pList size 21024, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 4 Split to two: left size 2 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 25, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x1c7b330
i 9 j 16 sizei 16 sizej 16 _out 51
i 9 j 16 sizei 32 sizej 16 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 113, check correct
Current pList size 113, grow
Current pList size 12995, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 16, check correct
Current pList size 16, grow
Current pList size 283, eliminate equvalents
Current pList size 58, check correct
Current pList size 58, grow
Current pList size 4470, eliminate equvalents
Current pList size 287, check correct
SynProg: (((i + i) + (i + i)) + ((i + 2) + (2 + 2)))
SynProg: (((i + i) + (i + i)) + ((i + 2) + (2 + 2)))
Start search condition, Complete, program found (((i + i) + (i + i)) + ((i + 2) + (2 + 2)))
succeed

Start search node 0x1c800e0
i 9 j 16 sizei 16 sizej 16 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 84, check correct
Current pList size 84, grow
Current pList size 7224, eliminate equvalents
Current pList size 1275, check correct
SynProg: (i + (6 * 7))
SynProg: (i + (6 * 7))
Complete, program found (i + (6 * 7))

Start search node 0x1c7b4c0
i 9 j 16 sizei 32 sizej 16 _out 51
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
Current pList size 99, grow
Current pList size 9999, eliminate equvalents
Current pList size 2045, check correct
SynProg: (i + (sizei + 10))
SynProg: (i + (sizei + 10))
Complete, program found (i + (sizei + 10))

Start search node 0x1c7f8c0
i 9 j 16 sizei 16 sizej 32 _out 139
i 9 j 16 sizei 32 sizej 32 _out 139
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 130, check correct
Current pList size 130, grow
Current pList size 17160, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 528, eliminate equvalents
Current pList size 88, check correct
Current pList size 88, grow
Current pList size 10725, eliminate equvalents
Current pList size 491, check correct
SynProg: ((i + sizej) + ((sizej + sizej) + (sizej + 2)))
SynProg: ((i + sizej) + ((sizej + sizej) + (sizej + 2)))
Start search condition, Complete, program found ((i + sizej) + ((sizej + sizej) + (sizej + 2)))
succeed

Start search node 0x1c7b880
i 9 j 16 sizei 16 sizej 32 _out 139
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
Current pList size 99, grow
Current pList size 9999, eliminate equvalents
Current pList size 2045, check correct
SynProg: (7 + (11 * 12))
SynProg: (7 + (11 * 12))
Complete, program found (7 + (11 * 12))

Start search node 0x1c7bc40
i 9 j 16 sizei 32 sizej 32 _out 139
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 99, check correct
Current pList size 99, grow
Current pList size 9999, eliminate equvalents
Current pList size 2045, check correct
SynProg: (7 + (11 * 12))
SynProg: (7 + (11 * 12))
Complete, program found (7 + (11 * 12))
--------------------------------------, dump tree after search
i 9 j 16 sizei 8 sizej 8 _out 1
i 9 j 16 sizei 8 sizej 16 _out 1
i 9 j 16 sizei 8 sizej 32 _out 1
i 9 j 16 sizei 16 sizej 8 _out 1
i 9 j 16 sizei 16 sizej 16 _out 0
i 9 j 16 sizei 16 sizej 32 _out 0
i 9 j 16 sizei 32 sizej 8 _out 1
i 9 j 16 sizei 32 sizej 16 _out 0
i 9 j 16 sizei 32 sizej 32 _out 0
Searched Program: (if ((i < sizei) && (i < sizej)) then -1 else (if (j < sizej) then (if (((i + i) + (i + i)) + ((i + 2) + (2 + 2))) then (i + (6 * 7)) else (i + (sizei + 10))) else (if ((i + sizej) + ((sizej + sizej) + (sizej + 2))) then (7 + (11 * 12)) else (7 + (11 * 12)))))
L---i 9 j 16 sizei 8 sizej 8 _out -1
L---i 9 j 16 sizei 8 sizej 16 _out -1
L---i 9 j 16 sizei 8 sizej 32 _out -1
L---i 9 j 16 sizei 16 sizej 8 _out -1
L---i 9 j 16 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 9 j 16 sizei 16 sizej 16 _out 1
R---i 9 j 16 sizei 16 sizej 32 _out 0
R---i 9 j 16 sizei 32 sizej 16 _out 1
R---i 9 j 16 sizei 32 sizej 32 _out 0
Searched Program: (if (j < sizej) then (if (((i + i) + (i + i)) + ((i + 2) + (2 + 2))) then (i + (6 * 7)) else (i + (sizei + 10))) else (if ((i + sizej) + ((sizej + sizej) + (sizej + 2))) then (7 + (11 * 12)) else (7 + (11 * 12))))
R---L---i 9 j 16 sizei 16 sizej 16 _out 51
R---L---i 9 j 16 sizei 32 sizej 16 _out 51
Searched Program: (if (((i + i) + (i + i)) + ((i + 2) + (2 + 2))) then (i + (6 * 7)) else (i + (sizei + 10)))
R---L---L---i 9 j 16 sizei 16 sizej 16 _out 51
Searched Program: (i + (6 * 7))
R---L---R---i 9 j 16 sizei 32 sizej 16 _out 51
Searched Program: (i + (sizei + 10))
R---R---i 9 j 16 sizei 16 sizej 32 _out 139
R---R---i 9 j 16 sizei 32 sizej 32 _out 139
Searched Program: (if ((i + sizej) + ((sizej + sizej) + (sizej + 2))) then (7 + (11 * 12)) else (7 + (11 * 12)))
R---R---L---i 9 j 16 sizei 16 sizej 32 _out 139
Searched Program: (7 + (11 * 12))
R---R---R---i 9 j 16 sizei 32 sizej 32 _out 139
Searched Program: (7 + (11 * 12))
--------------------------------------
--------------------------------------, dump search result start
Searched Program (^0^) : (if ((i < sizei) && (i < sizej)) then -1 else (if (j < sizej) then (if (((i + i) + (i + i)) + ((i + 2) + (2 + 2))) then (i + (6 * 7)) else (i + (sizei + 10))) else (if ((i + sizej) + ((sizej + sizej) + (sizej + 2))) then (7 + (11 * 12)) else (7 + (11 * 12)))))
--------------------------------------
