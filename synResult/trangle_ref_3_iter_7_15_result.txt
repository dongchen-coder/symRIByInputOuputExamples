Input output examples:
    i 7 j 15 sizei 8 sizej 8    _out -1
    i 7 j 15 sizei 8 sizej 16    _out 55
    i 7 j 15 sizei 8 sizej 32    _out 96
    i 7 j 15 sizei 16 sizej 8    _out -1
    i 7 j 15 sizei 16 sizej 16    _out 55
    i 7 j 15 sizei 16 sizej 32    _out 151
    i 7 j 15 sizei 32 sizej 8    _out -1
    i 7 j 15 sizei 32 sizej 16    _out 55
    i 7 j 15 sizei 32 sizej 32    _out 151
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x11614a0
i 7 j 15 sizei 8 sizej 8 _out -1
i 7 j 15 sizei 8 sizej 16 _out 55
i 7 j 15 sizei 8 sizej 32 _out 96
i 7 j 15 sizei 16 sizej 8 _out -1
i 7 j 15 sizei 16 sizej 16 _out 55
i 7 j 15 sizei 16 sizej 32 _out 151
i 7 j 15 sizei 32 sizej 8 _out -1
i 7 j 15 sizei 32 sizej 16 _out 55
i 7 j 15 sizei 32 sizej 32 _out 151
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 3 right size 6
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 28, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x11613b0
i 7 j 15 sizei 8 sizej 8 _out -1
i 7 j 15 sizei 16 sizej 8 _out -1
i 7 j 15 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x1162900
i 7 j 15 sizei 8 sizej 16 _out 55
i 7 j 15 sizei 8 sizej 32 _out 96
i 7 j 15 sizei 16 sizej 16 _out 55
i 7 j 15 sizei 16 sizej 32 _out 151
i 7 j 15 sizei 32 sizej 16 _out 55
i 7 j 15 sizei 32 sizej 32 _out 151
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 6 Split to two: left size 3 right size 3
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 26, check correct
Current pList size 26, grow
Current pList size 658, eliminate equvalents
Current pList size 142, check correct
SynProg: (sizej < (i + j))
SynProg: (sizej < (i + j))
Start search condition, Complete, program found (sizej < (i + j))
succeed

Start search node 0x115c6a0
i 7 j 15 sizei 8 sizej 16 _out 55
i 7 j 15 sizei 16 sizej 16 _out 55
i 7 j 15 sizei 32 sizej 16 _out 55
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 125, check correct
SynProg: (5 * 11)
SynProg: (5 * 11)
Complete, program found (5 * 11)

Start search node 0x115c830
i 7 j 15 sizei 8 sizej 32 _out 96
i 7 j 15 sizei 16 sizej 32 _out 151
i 7 j 15 sizei 32 sizej 32 _out 151
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 136, check correct
Current pList size 136, grow
Current pList size 18768, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 25, check correct
SynProg: (j < sizei)
SynProg: (j < sizei)
Start search condition, Complete, program found (j < sizei)
succeed

Start search node 0x115cbf0
i 7 j 15 sizei 8 sizej 32 _out 96
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 105, check correct
SynProg: (sizei * 12)
SynProg: (sizei * 12)
Complete, program found (sizei * 12)

Start search node 0x115c650
i 7 j 15 sizei 16 sizej 32 _out 151
i 7 j 15 sizei 32 sizej 32 _out 151
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 136, check correct
Current pList size 136, grow
Current pList size 18768, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 23, check correct
Current pList size 23, grow
Current pList size 640, eliminate equvalents
Current pList size 121, check correct
Current pList size 121, grow
Current pList size 20724, eliminate equvalents
Current pList size 710, check correct
SynProg: (((i + i) + (i + sizej)) + ((sizej + sizej) + (sizej + 2)))
SynProg: (((i + i) + (i + sizej)) + ((sizej + sizej) + (sizej + 2)))
Start search condition, Complete, program found (((i + i) + (i + sizej)) + ((sizej + sizej) + (sizej + 2)))
succeed

Start search node 0x115c510
i 7 j 15 sizei 16 sizej 32 _out 151
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 110, check correct
Current pList size 110, grow
Current pList size 12320, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 1 Split current node, failed
