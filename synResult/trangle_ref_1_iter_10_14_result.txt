Input output examples:
    i 10 j 14 sizei 8 sizej 8    _out -1
    i 10 j 14 sizei 8 sizej 16    _out -1
    i 10 j 14 sizei 8 sizej 32    _out -1
    i 10 j 14 sizei 16 sizej 8    _out -1
    i 10 j 14 sizei 16 sizej 16    _out 33
    i 10 j 14 sizei 16 sizej 32    _out 30
    i 10 j 14 sizei 32 sizej 8    _out -1
    i 10 j 14 sizei 32 sizej 16    _out 33
    i 10 j 14 sizei 32 sizej 32    _out 129
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0xf5c4a0
i 10 j 14 sizei 8 sizej 8 _out -1
i 10 j 14 sizei 8 sizej 16 _out -1
i 10 j 14 sizei 8 sizej 32 _out -1
i 10 j 14 sizei 16 sizej 8 _out -1
i 10 j 14 sizei 16 sizej 16 _out 33
i 10 j 14 sizei 16 sizej 32 _out 30
i 10 j 14 sizei 32 sizej 8 _out -1
i 10 j 14 sizei 32 sizej 16 _out 33
i 10 j 14 sizei 32 sizej 32 _out 129
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Current node size 9 Split to two: left size 5 right size 4
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 22, check correct
Current pList size 22, grow
Current pList size 360, eliminate equvalents
Current pList size 102, check correct
SynProg: ((i < sizei) && (i < sizej))
SynProg: ((i < sizei) && (i < sizej))
Complete, program found ((i < sizei) && (i < sizej))

Start search node 0xf5beb0
i 10 j 14 sizei 8 sizej 8 _out -1
i 10 j 14 sizei 8 sizej 16 _out -1
i 10 j 14 sizei 8 sizej 32 _out -1
i 10 j 14 sizei 16 sizej 8 _out -1
i 10 j 14 sizei 32 sizej 8 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0xf5c270
i 10 j 14 sizei 16 sizej 16 _out 33
i 10 j 14 sizei 16 sizej 32 _out 30
i 10 j 14 sizei 32 sizej 16 _out 33
i 10 j 14 sizei 32 sizej 32 _out 129
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Current node size 4 Split to two: left size 3 right size 1
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
Current pList size 18, grow
Current pList size 330, eliminate equvalents
Current pList size 79, check correct
Current pList size 79, grow
Current pList size 7311, eliminate equvalents
Current pList size 504, check correct
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
SynProg: ((! (sizei < sizej) ) && ((i + i) < sizej))
Complete, program found ((! (sizei < sizej) ) && ((i + i) < sizej))

Start search node 0xf57f60
i 10 j 14 sizei 16 sizej 16 _out 33
i 10 j 14 sizei 16 sizej 32 _out 30
i 10 j 14 sizei 32 sizej 16 _out 33
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 145, check correct
Current pList size 145, grow
Current pList size 21315, eliminate equvalents
Time out for bottem up search
Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Init pList size 4, check correct
Current pList size 4, grow
Current pList size 31, eliminate equvalents
Current pList size 18, check correct
SynProg: (sizei < sizej)
SynProg: (sizei < sizej)
Complete, program found (sizei < sizej)

Start search node 0xf5c450
i 10 j 14 sizei 16 sizej 32 _out 30
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 108, check correct
SynProg: (j + sizei)
SynProg: (j + sizei)
Complete, program found (j + sizei)

Start search node 0xf5c360
i 10 j 14 sizei 16 sizej 16 _out 33
i 10 j 14 sizei 32 sizej 16 _out 33
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 123, check correct
SynProg: (3 * 11)
SynProg: (3 * 11)
Complete, program found (3 * 11)

Start search node 0xf57ba0
i 10 j 14 sizei 32 sizej 32 _out 129
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 105, check correct
Current pList size 105, grow
Current pList size 11235, eliminate equvalents
Time out for bottem up search
Current node size 1 Split current node, failed
Search fcase failed
Search fcase failed
--------------------------------------, dump tree after search
i 10 j 14 sizei 8 sizej 8 _out 1
i 10 j 14 sizei 8 sizej 16 _out 1
i 10 j 14 sizei 8 sizej 32 _out 1
i 10 j 14 sizei 16 sizej 8 _out 1
i 10 j 14 sizei 16 sizej 16 _out 0
i 10 j 14 sizei 16 sizej 32 _out 0
i 10 j 14 sizei 32 sizej 8 _out 1
i 10 j 14 sizei 32 sizej 16 _out 0
i 10 j 14 sizei 32 sizej 32 _out 0
Searched Program: 
L---i 10 j 14 sizei 8 sizej 8 _out -1
L---i 10 j 14 sizei 8 sizej 16 _out -1
L---i 10 j 14 sizei 8 sizej 32 _out -1
L---i 10 j 14 sizei 16 sizej 8 _out -1
L---i 10 j 14 sizei 32 sizej 8 _out -1
Searched Program: -1
R---i 10 j 14 sizei 16 sizej 16 _out 1
R---i 10 j 14 sizei 16 sizej 32 _out 1
R---i 10 j 14 sizei 32 sizej 16 _out 1
R---i 10 j 14 sizei 32 sizej 32 _out 0
Searched Program: 
R---L---i 10 j 14 sizei 16 sizej 16 _out 0
R---L---i 10 j 14 sizei 16 sizej 32 _out 1
R---L---i 10 j 14 sizei 32 sizej 16 _out 0
Searched Program: (if (sizei < sizej) then (j + sizei) else (3 * 11))
R---L---L---i 10 j 14 sizei 16 sizej 32 _out 30
Searched Program: (j + sizei)
R---L---R---i 10 j 14 sizei 16 sizej 16 _out 33
R---L---R---i 10 j 14 sizei 32 sizej 16 _out 33
Searched Program: (3 * 11)
R---R---i 10 j 14 sizei 32 sizej 32 _out 129
Searched Program: 
--------------------------------------
--------------------------------------, dump search result start
Not yet founded, (T^T)
--------------------------------------
