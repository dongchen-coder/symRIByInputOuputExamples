Input output examples:
    i 8 j 23 sizei 8 sizej 8    _out -1
    i 8 j 23 sizei 8 sizej 16    _out -1
    i 8 j 23 sizei 8 sizej 32    _out 55
    i 8 j 23 sizei 16 sizej 8    _out -1
    i 8 j 23 sizei 16 sizej 16    _out -1
    i 8 j 23 sizei 16 sizej 32    _out 145
    i 8 j 23 sizei 32 sizej 8    _out -1
    i 8 j 23 sizei 32 sizej 16    _out -1
    i 8 j 23 sizei 32 sizej 32    _out 145
Language used in Unification:
    Predicate language:
        program depth bound: 6
        intOps: VAR PLUS 
        boolOps: F AND NOT LT 
        constants: 2 
        vars: i j sizei sizej 
    Term language:
        program depth bound: 6
        intOps: VAR NUM PLUS TIMES 
        boolOps: 
        constants: 1 2 3 4 5 6 7 8 9 10 11 12 -1 
        vars: i j sizei sizej 
--------------------------------------, search start

Start search node 0x18d14a0
i 8 j 23 sizei 8 sizej 8 _out -1
i 8 j 23 sizei 8 sizej 16 _out -1
i 8 j 23 sizei 8 sizej 32 _out 55
i 8 j 23 sizei 16 sizej 8 _out -1
i 8 j 23 sizei 16 sizej 16 _out -1
i 8 j 23 sizei 16 sizej 32 _out 145
i 8 j 23 sizei 32 sizej 8 _out -1
i 8 j 23 sizei 32 sizej 16 _out -1
i 8 j 23 sizei 32 sizej 32 _out 145
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 153, check correct
Current pList size 153, grow
Current pList size 23715, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 9 Split to two: left size 6 right size 3
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 30, check correct
SynProg: (j < sizej)
SynProg: (j < sizej)
Start search condition, Complete, program found (j < sizej)
succeed

Start search node 0x18d0dc0
i 8 j 23 sizei 8 sizej 8 _out -1
i 8 j 23 sizei 8 sizej 16 _out -1
i 8 j 23 sizei 16 sizej 8 _out -1
i 8 j 23 sizei 16 sizej 16 _out -1
i 8 j 23 sizei 32 sizej 8 _out -1
i 8 j 23 sizei 32 sizej 16 _out -1
Searched Program: 
Init pList size 17, check correct
SynProg: -1
SynProg: -1
Complete, program found -1

Start search node 0x18d1090
i 8 j 23 sizei 8 sizej 32 _out 55
i 8 j 23 sizei 16 sizej 32 _out 145
i 8 j 23 sizei 32 sizej 32 _out 145
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 141, check correct
Current pList size 141, grow
Current pList size 20163, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 3 Split to two: left size 1 right size 2
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 25, check correct
SynProg: (i < sizei)
SynProg: (i < sizei)
Start search condition, Complete, program found (i < sizei)
succeed

Start search node 0x18cc790
i 8 j 23 sizei 8 sizej 32 _out 55
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 110, check correct
SynProg: (j + sizej)
SynProg: (j + sizej)
Complete, program found (j + sizej)

Start search node 0x18ce090
i 8 j 23 sizei 16 sizej 32 _out 145
i 8 j 23 sizei 32 sizej 32 _out 145
Searched Program: 
Init pList size 17, check correct
Current pList size 17, grow
Current pList size 323, eliminate equvalents
Current pList size 141, check correct
Current pList size 141, grow
Current pList size 20163, eliminate equvalents
Time out for bottem up search
Failed, try to split node: Current node size 2 Split to two: left size 1 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 645, eliminate equvalents
Current pList size 121, check correct
Current pList size 121, grow
Current pList size 20724, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Current node size 2 Split to two: left size 2 right size 0
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 24, check correct
Current pList size 24, grow
Current pList size 645, eliminate equvalents
Current pList size 121, check correct
Current pList size 121, grow
Current pList size 20724, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 3 Split to two: left size 2 right size 1
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 25, check correct
Current pList size 25, grow
Current pList size 651, eliminate equvalents
Current pList size 124, check correct
Current pList size 124, grow
Current pList size 20745, eliminate equvalents
Start search condition, Time out for bottem up search
faild
Search fcase failed
Current node size 9 Split to two: left size 6 right size 3
Split current node, succeed
Start search condition, Init pList size 5, check correct
Current pList size 5, grow
Current pList size 46, eliminate equvalents
Current pList size 30, check correct
Current pList size 30, grow
Current pList size 696, eliminate equvalents
Current pList size 171, check correct
Current pList size 171, grow
Current pList size 24426, eliminate equvalents
Start search condition, Time out for bottem up search
faild
--------------------------------------, dump tree after search
i 8 j 23 sizei 8 sizej 8 _out -1
i 8 j 23 sizei 8 sizej 16 _out -1
i 8 j 23 sizei 16 sizej 8 _out -1
i 8 j 23 sizei 16 sizej 16 _out -1
i 8 j 23 sizei 32 sizej 8 _out -1
i 8 j 23 sizei 32 sizej 16 _out -1
i 8 j 23 sizei 16 sizej 32 _out 145
i 8 j 23 sizei 32 sizej 32 _out 145
i 8 j 23 sizei 8 sizej 32 _out 55
Searched Program: 
--------------------------------------
--------------------------------------, dump search result start
Not yet founded, (T^T)
--------------------------------------
